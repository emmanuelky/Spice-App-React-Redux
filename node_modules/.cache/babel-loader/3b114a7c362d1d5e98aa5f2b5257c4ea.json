{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/AllCryptoMarket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions';\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCryptoMarket = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  const newObjKeys = allCryptoMarket.map((crypto, i, arr) => [crypto.current_price]);\n  const single = newObjKeys.map((crypto, i, arr) => crypto); // console.log(single)\n\n  const dateTimeAgo = moment().fromNow();\n  console.log(dateTimeAgo); // const cryptoPrice = allCryptoMarket.map(crypto => crypto.current_price)\n  // const allCrypto = useSelector(state => state.crypto.all_crypto_market)\n  // const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\")\n  // const btcCurrentLastPrice = btcLastPrice.current_price\n  // console.log(btcCurrentLastPrice)\n  // console.log(lastPrice)\n\n  useEffect(() => {\n    dispatch(fetchAllCryptoMarket());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-300   \",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"overflow-x-auto\",\n      children: allCryptoMarket === null || allCryptoMarket === void 0 ? void 0 : allCryptoMarket.map(crypto =>\n      /*#__PURE__*/\n      // <Link to={ }>\n      _jsxDEV(Row, {\n        onClick: () => dispatch(getSingleCryptoDetails(crypto.id)),\n        className: \"my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          className: \"\",\n          children: [\" \", crypto.market_cap_rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          className: \"text-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-10 h-10\",\n              src: crypto.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 71\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-evenly align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [crypto.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: crypto.symbol.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 137\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"\\u20AC\", crypto.current_price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600',\n          children: [crypto.price_change_percentage_24h.toLocaleString(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"\\u20AC\", crypto.market_cap.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"\\u20AC\", crypto.total_volume.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this) // </Link>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllCryptoMarket, \"opsTMwFIIb+I/d0XpOGSVj3e4EM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllCryptoMarket;\nexport default AllCryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCryptoMarket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/AllCryptoMarket.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchAllCryptoMarket","getSingleCryptoDetails","Card","Button","Spinner","Container","Row","Col","Modal","moment","AllCryptoMarket","dispatch","allCryptoMarket","state","crypto","all_crypto_market","newObjKeys","map","i","arr","current_price","single","dateTimeAgo","fromNow","console","log","id","market_cap_rank","image","name","symbol","toUpperCase","toLocaleString","price_change_percentage_24h","market_cap","total_volume"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions'\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap'\nimport moment from 'moment'\n\n\n\nconst AllCryptoMarket = () => {\n\n\n\n    const dispatch = useDispatch()\n\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n    const newObjKeys = allCryptoMarket.map((crypto, i, arr) => [crypto.current_price])\n    const single = newObjKeys.map((crypto, i, arr) => crypto)\n\n    // console.log(single)\n\n    const dateTimeAgo = moment().fromNow();\n    console.log(dateTimeAgo);\n    // const cryptoPrice = allCryptoMarket.map(crypto => crypto.current_price)\n\n    // const allCrypto = useSelector(state => state.crypto.all_crypto_market)\n    // const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\")\n    // const btcCurrentLastPrice = btcLastPrice.current_price\n    // console.log(btcCurrentLastPrice)\n\n\n    // console.log(lastPrice)\n\n    useEffect(() => {\n        dispatch(fetchAllCryptoMarket())\n\n    }, [])\n\n\n\n\n    return (\n        <div className='text-gray-300   '>\n            <Container fluid className='overflow-x-auto'>\n\n\n\n                {\n                    allCryptoMarket?.map(crypto => (\n                        // <Link to={ }>\n\n                        <Row onClick={() => dispatch(getSingleCryptoDetails(crypto.id))} className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                            <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n                            <Col md={1} className='text-center'> <div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div></Col>\n\n                            <Col md={2}  ><div className=\"flex justify-evenly align-items-center\"><div className=''>{crypto.name} </div><span className='text-gray-500'>{crypto.symbol.toUpperCase()}</span></div></Col>\n\n                            <Col md={2} className='text-center'>€{crypto.current_price.toLocaleString()}</Col>\n\n                            <Col md={2} className={crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600'}>{crypto.price_change_percentage_24h.toLocaleString()}%</Col>\n\n                            <Col md={2} className='text-center'>€{crypto.market_cap.toLocaleString()}</Col>\n\n                            <Col md={2} className='text-center'>€{crypto.total_volume.toLocaleString()}</Col>\n\n                        </Row>\n                        // </Link>\n                    ))\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default AllCryptoMarket\n"]},"metadata":{},"sourceType":"module"}