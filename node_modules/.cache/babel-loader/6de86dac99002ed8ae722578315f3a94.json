{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { postsReducer } from '../reducers/postReducer';\nimport { usersReducer } from '../reducers/userReducer';\nimport { movieReducer } from '../reducers/moviesReducer';\nimport { musicReducer } from '../reducers/musicReducer';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nimport storage from 'redux-persist/lib/storage';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nexport const initialState = {\n  posts: {\n    posts: [],\n    likes: [],\n    loading: false\n  },\n  users: {\n    users: [],\n    loggedin: true,\n    getcurrentuser: {},\n    loading: false,\n    following: []\n  },\n  movies: {\n    all_movies: [],\n    movie_details: [],\n    movie_category: [],\n    loading: false\n  },\n  music: {\n    music_lists: [],\n    loading: false\n  }\n};\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [encryptTransform({\n    secretKey: process.env.REACT_APP_ENCRYPT_KEY\n  })]\n};\nconst allReducers = combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n  movies: movieReducer,\n  music: musicReducer\n});\nconst persistAllReducers = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistAllReducers, initialState, process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/redux/store/index.jsx"],"names":["createStore","applyMiddleware","combineReducers","compose","postsReducer","usersReducer","movieReducer","musicReducer","thunk","persistStore","persistReducer","encryptTransform","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","posts","likes","loading","users","loggedin","getcurrentuser","following","movies","all_movies","movie_details","movie_category","music","music_lists","persistConfig","key","transforms","secretKey","process","env","REACT_APP_ENCRYPT_KEY","allReducers","persistAllReducers","store","REACT_APP_DEVELOPMENT","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,OAAO,EAAE;AAHN,GADiB;AAOxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,cAAc,EAAE,EAHb;AAIHH,IAAAA,OAAO,EAAE,KAJN;AAKHI,IAAAA,SAAS,EAAE;AALR,GAPiB;AAcxBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,EADR;AAEJC,IAAAA,aAAa,EAAE,EAFX;AAGJC,IAAAA,cAAc,EAAE,EAHZ;AAIJR,IAAAA,OAAO,EAAE;AAJL,GAdgB;AAoBxBS,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,EADV;AAEHV,IAAAA,OAAO,EAAE;AAFN;AApBiB,CAArB;AA4BP,MAAMW,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBnB,EAAAA,OAFkB;AAGlBoB,EAAAA,UAAU,EAAE,CACRrB,gBAAgB,CAAC;AACbsB,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,GAAD,CADR;AAHM,CAAtB;AAWA,MAAMC,WAAW,GAAGnC,eAAe,CAAC;AAChCe,EAAAA,KAAK,EAAEb,YADyB;AAEhCgB,EAAAA,KAAK,EAAEf,YAFyB;AAGhCmB,EAAAA,MAAM,EAAElB,YAHwB;AAIhCsB,EAAAA,KAAK,EAAErB;AAJyB,CAAD,CAAnC;AAOA,MAAM+B,kBAAkB,GAAG5B,cAAc,CACrCoB,aADqC,EACtBO,WADsB,CAAzC;AAIA,OAAO,MAAME,KAAK,GAAGvC,WAAW,CAACsC,kBAAD,EAC5BtB,YAD4B,EAE5BkB,OAAO,CAACC,GAAR,CAAYK,qBAAZ,GAAoC3B,gBAAgB,CAACZ,eAAe,CAACO,KAAD,CAAhB,CAApD,GAA+EL,OAAO,CAACF,eAAe,CAACO,KAAD,CAAhB,CAF1D,CAAzB;AAIP,OAAO,MAAMiC,SAAS,GAAGhC,YAAY,CAAC8B,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { postsReducer } from '../reducers/postReducer'\nimport { usersReducer } from '../reducers/userReducer'\nimport { movieReducer } from '../reducers/moviesReducer'\nimport { musicReducer } from '../reducers/musicReducer'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { encryptTransform } from 'redux-persist-transform-encrypt'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\nexport const initialState = {\n    posts: {\n        posts: [],\n        likes: [],\n        loading: false,\n\n    },\n    users: {\n        users: [],\n        loggedin: true,\n        getcurrentuser: {},\n        loading: false,\n        following: [],\n    },\n    movies: {\n        all_movies: [],\n        movie_details: [],\n        movie_category: [],\n        loading: false,\n    },\n    music: {\n        music_lists: [],\n        loading: false,\n    },\n}\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [\n        encryptTransform({\n            secretKey: process.env.REACT_APP_ENCRYPT_KEY,\n        }),\n    ],\n}\n\n\nconst allReducers = combineReducers({\n    posts: postsReducer,\n    users: usersReducer,\n    movies: movieReducer,\n    music: musicReducer,\n})\n\nconst persistAllReducers = persistReducer(\n    persistConfig, allReducers\n)\n\nexport const store = createStore(persistAllReducers,\n    initialState,\n    process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)))\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}