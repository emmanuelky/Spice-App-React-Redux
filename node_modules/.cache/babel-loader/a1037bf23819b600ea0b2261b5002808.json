{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/CryptoSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { fetchAllCryptoMarket } from '../../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoSearch = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  console.log(allCryptoMarket);\n  useEffect(e => {}, []);\n\n  const handleSearch = searchQuery => {\n    return allCryptoMarket.map(crypto => crypto.name === searchQuery) ? dispatch(fetchAllCryptoMarket(searchQuery)) : '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sticky top-40 z-40 bg-gray-900 focus:ring-2 focus:ring-blue-600\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"search\",\n          placeholder: \"search crypto name\",\n          onChange: e => handleSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoSearch, \"opsTMwFIIb+I/d0XpOGSVj3e4EM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CryptoSearch;\nexport default CryptoSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoSearch\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/CryptoSearch.jsx"],"names":["React","useEffect","Form","fetchAllCryptoMarket","useSelector","useDispatch","CryptoSearch","dispatch","allCryptoMarket","state","crypto","all_crypto_market","console","log","e","handleSearch","searchQuery","map","name","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,eAAe,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,iBAAvB,CAAnC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AAEAP,EAAAA,SAAS,CAAEa,CAAD,IAAO,CAEhB,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,WAAD,IAAiB;AAClC,WAAOR,eAAe,CAACS,GAAhB,CAAoBP,MAAM,IAAIA,MAAM,CAACQ,IAAP,KAAgBF,WAA9C,IAA6DT,QAAQ,CAACJ,oBAAoB,CAACa,WAAD,CAArB,CAArE,GAA2G,EAAlH;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,2BAAvC;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,WAAW,EAAC,oBAAxC;AACI,UAAA,QAAQ,EAAGF,CAAD,IAAOC,YAAY,CAACD,CAAC,CAACK,MAAF,CAASC,KAAV;AADjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA3BD;;GAAMd,Y;UAEeD,W,EACOD,W;;;KAHtBE,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { fetchAllCryptoMarket } from '../../redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst CryptoSearch = () => {\n\n    const dispatch = useDispatch()\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n\n    console.log(allCryptoMarket)\n\n    useEffect((e) => {\n\n    }, [])\n\n    const handleSearch = (searchQuery) => {\n        return allCryptoMarket.map(crypto => crypto.name === searchQuery) ? dispatch(fetchAllCryptoMarket(searchQuery)) : ''\n    }\n\n\n    return (\n        <div className='sticky top-40 z-40 bg-gray-900 focus:ring-2 focus:ring-blue-600'>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control type=\"search\" placeholder=\"search crypto name\"\n                        onChange={(e) => handleSearch(e.target.value)} />\n                </Form.Group>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default CryptoSearch\n\n"]},"metadata":{},"sourceType":"module"}