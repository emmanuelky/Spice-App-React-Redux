{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllCryptoMarket } from '../../redux/actions';\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCryptoMarket = () => {\n  _s();\n\n  const [priceChangeColor, setPriceChangeColor] = useState(false);\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  const cryptoPriceChange = allCryptoMarket.map(cryptoprice => cryptoprice.current_price);\n  console.log(cryptoPriceChange);\n  useEffect(() => {\n    dispatch(fetchAllCryptoMarket());\n  }, [cryptoPriceChange]);\n\n  const symbolToUpperCase = symbol => symbol.toUpperCase();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-300   \",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"overflow-x-auto\",\n      children: allCryptoMarket.map(crypto => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          className: \"\",\n          children: [\" \", crypto.market_cap_rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-evenly align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"w-10 h-10\",\n                src: crypto.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 104\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [crypto.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 166\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: symbolToUpperCase(crypto.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 204\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"$\", crypto.current_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: crypto.low_24h\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"$\", crypto.market_cap]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: crypto.circulating_supply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllCryptoMarket, \"JFRyY5QBkRCfSpoYmnS8OKYIMRw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllCryptoMarket;\nexport default AllCryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCryptoMarket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchAllCryptoMarket","Card","Button","Spinner","Container","Row","Col","Modal","AllCryptoMarket","priceChangeColor","setPriceChangeColor","dispatch","allCryptoMarket","state","crypto","all_crypto_market","cryptoPriceChange","map","cryptoprice","current_price","console","log","symbolToUpperCase","symbol","toUpperCase","market_cap_rank","image","name","low_24h","market_cap","circulating_supply"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAllCryptoMarket } from '../../redux/actions'\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap'\n\n\nconst AllCryptoMarket = () => {\n\n    const [priceChangeColor, setPriceChangeColor] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n\n    const cryptoPriceChange = allCryptoMarket.map(cryptoprice => cryptoprice.current_price)\n\n    console.log(cryptoPriceChange)\n\n    useEffect(() => {\n        dispatch(fetchAllCryptoMarket())\n    }, [cryptoPriceChange])\n\n\n    const symbolToUpperCase = (symbol) => symbol.toUpperCase()\n\n    return (\n        <div className='text-gray-300   '>\n            <Container fluid className='overflow-x-auto'>\n\n                {\n                    allCryptoMarket.map(crypto => (\n\n                        <Row className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                            <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n\n                            <Col md={3}  ><div className=\"flex justify-evenly align-items-center\"><div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div><div className=''>{crypto.name} </div><span className='text-gray-500'>{symbolToUpperCase(crypto.symbol)}</span></div></Col>\n\n                            <Col md={2} className='text-center'>${crypto.current_price}</Col>\n\n                            <Col md={2} className='text-center'>{crypto.low_24h}</Col>\n\n                            <Col md={2} className='text-center'>${crypto.market_cap}</Col>\n\n                            <Col md={2} className='text-center'>{crypto.circulating_supply}</Col>\n\n                        </Row>\n                    ))\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default AllCryptoMarket\n"]},"metadata":{},"sourceType":"module"}