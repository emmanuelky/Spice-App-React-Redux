{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Following.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { RiWalkFill } from \"react-icons/ri\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addUser, addUnfollowingUserBackToUsersList, removeFromFollowingList } from '../../redux/actions';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Following = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const myAddedFollowers = useSelector(state => state.users.following); // console.log(myAddedFollowers)\n\n  const unfollowingUsers = useSelector(state => state.users.unfollowing_user_list); // console.log(unfollowingUsers)\n\n  const unfollowingUserId = unfollowingUsers === null || unfollowingUsers === void 0 ? void 0 : unfollowingUsers.map(user => user.id); // const loading = useSelector(state => state.posts.loading)\n\n  const handleUnfollowing = user => {\n    dispatch(addUnfollowingUserBackToUsersList(user));\n    dispatch(removeFromFollowingList(user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Following, \"G1OwfbinCr5XRSqNDGNkVsR1Wbg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Following;\nexport default Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Following.jsx"],"names":["React","useEffect","useState","RiWalkFill","IoMdRemoveCircleOutline","useSelector","useDispatch","addUser","addUnfollowingUserBackToUsersList","removeFromFollowingList","Container","Row","Col","Spinner","Following","dispatch","myAddedFollowers","state","users","following","unfollowingUsers","unfollowing_user_list","unfollowingUserId","map","user","id","handleUnfollowing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,iCAAlB,EAAqDC,uBAArD,QAAoF,qBAApF;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAA9B,QAA6C,iBAA7C;;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAIpB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,gBAAgB,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAtB,CAApC,CALoB,CAMpB;;AAEA,QAAMC,gBAAgB,GAAGf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,qBAAtB,CAApC,CARoB,CASpB;;AACA,QAAMC,iBAAiB,GAAGF,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEG,GAAlB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAnC,CAA1B,CAVoB,CAYpB;;AAIA,QAAMC,iBAAiB,GAAIF,IAAD,IAAU;AAChCT,IAAAA,QAAQ,CAACP,iCAAiC,CAACgB,IAAD,CAAlC,CAAR;AACAT,IAAAA,QAAQ,CAACN,uBAAuB,CAACe,IAAI,CAACC,EAAN,CAAxB,CAAR;AACH,GAHD;;AAOA,sBAEI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsCH,CA7DD;;GAAMX,S;UAIeR,W,EACQD,W,EAGAA,W;;;KARvBS,S;AA+DN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { RiWalkFill } from \"react-icons/ri\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addUser, addUnfollowingUserBackToUsersList, removeFromFollowingList } from '../../redux/actions'\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\n\n\n\n\nconst Following = () => {\n\n\n\n    const dispatch = useDispatch()\n    const myAddedFollowers = useSelector(state => state.users.following)\n    // console.log(myAddedFollowers)\n\n    const unfollowingUsers = useSelector(state => state.users.unfollowing_user_list)\n    // console.log(unfollowingUsers)\n    const unfollowingUserId = unfollowingUsers?.map(user => user.id)\n\n    // const loading = useSelector(state => state.posts.loading)\n\n\n\n    const handleUnfollowing = (user) => {\n        dispatch(addUnfollowingUserBackToUsersList(user))\n        dispatch(removeFromFollowingList(user.id))\n    }\n\n\n\n    return (\n\n        <Container fluid>\n            <Row>\n\n                {/* <div className='  flex flex-wrap mb-5 p-2 gap-4 text-sm bg-gray-900 w-screen h-100  flex-col '>\n                    <div className='text-light  flex justify-center align-items-center md:text-xs'><div className=' text-lg'><RiWalkFill /></div><span className='mx-2 text-lg'>Following</span></div>\n\n                    {\n                        loading\n                            ? (<Spinner animation=\"border\" variant=\"success\" />)\n                            :\n                        myAddedFollowers?.slice(0, 5).map(user => (\n                            <div key={user.id}>\n                                <div className={unfollowingUserId?.includes(user.id) ? 'hidden' : ' md:text-xs md:flex-col relative  '}>\n                                    <div className='absolute -inset-0.5 opacity-50 bg-blue-600 rounded-lg blur-xl  '></div>\n                                    <div className='flex justify-between bg-gray-900 rounded-lg align-items-center  border-1 border-blue-600  text-center text-gray-300 leading-none p-2 relative  '>\n                                        <Col md={3}>\n                                            <div className=' cursor-pointer'><img className='h-10 w-10 rounded-full ' src={user.image} alt=\"\" /></div>\n                                        </Col>\n                                        <Col md={3}>\n                                            <div className=' cursor-pointer text-sm'><span className=' '>{user.firstName}</span></div>\n\n                                        </Col>\n                                        <Col md={3} className='mx-5'>\n                                            <div onClick={() => handleUnfollowing(user)} className=' cursor-pointer text-sm text-red-200 hover:text-red-500'>unfollow</div>\n\n                                        </Col>\n\n                                    </div>\n                                </div>\n                            </div>))\n                    }\n\n                </div> */}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Following\n"]},"metadata":{},"sourceType":"module"}