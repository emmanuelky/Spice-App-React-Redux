{"ast":null,"code":"import React,{useEffect,useState}from'react';import ReactPlayer from'react-player';import{useSelector,useDispatch}from'react-redux';import ReactAudioPlayer from'react-audio-player';import{jsx as _jsx}from\"react/jsx-runtime\";var Player=function Player(){// const [isPlaying, setIsPlaying] = useState(false)\nvar currentSong=useSelector(function(state){return state.music.current_song;});// console.log(currentSong)\n// useEffect(() => {\n//     // setIsPlaying(!isPlaying)\n// }, [currentSong])\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"relative\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute fixed-bottom\",children:/*#__PURE__*/_jsx(ReactAudioPlayer,{src:currentSong===null||currentSong===void 0?void 0:currentSong.preview,autoPlay:true,controls:true,className:\"mx-auto text-blue-600\",loop:true})})});};export default Player;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/Player.jsx"],"names":["React","useEffect","useState","ReactPlayer","useSelector","useDispatch","ReactAudioPlayer","Player","currentSong","state","music","current_song","preview"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,2CAIA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAEjB;AACA,GAAMC,CAAAA,WAAW,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,YAAhB,EAAN,CAA/B,CACA;AAEA;AACA;AACA;AAEA,mBACI,YAAK,SAAS,CAAC,UAAf,uBACI,YAAK,SAAS,CAAC,uBAAf,uBAgBI,KAAC,gBAAD,EACI,GAAG,CAAEH,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEI,OADtB,CAEI,QAAQ,KAFZ,CAGI,QAAQ,KAHZ,CAII,SAAS,CAAC,uBAJd,CAKI,IAAI,CAAE,IALV,EAhBJ,EADJ,EADJ,CA6BH,CAvCD,CAyCA,cAAeL,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactPlayer from 'react-player'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n\nconst Player = () => {\n\n    // const [isPlaying, setIsPlaying] = useState(false)\n    const currentSong = useSelector(state => state.music.current_song)\n    // console.log(currentSong)\n\n    // useEffect(() => {\n    //     // setIsPlaying(!isPlaying)\n    // }, [currentSong])\n\n    return (\n        <div className='relative'>\n            <div className='absolute fixed-bottom'>\n\n\n                {/* <ReactPlayer url={currentSong?.preview}\n                    // playing\n                    controls={true}\n\n                    className=\"mx-auto text-blue-600\"\n                    pip={true}\n                    stopOnUnmount={true}\n                    loop={true}\n                // playIcon={<img src={currentSong?.album.cover} alt=\"\" />}\n                /> */}\n\n\n\n                <ReactAudioPlayer\n                    src={currentSong?.preview}\n                    autoPlay\n                    controls\n                    className=\"mx-auto text-blue-600\"\n                    loop={true}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Player\n"]},"metadata":{},"sourceType":"module"}