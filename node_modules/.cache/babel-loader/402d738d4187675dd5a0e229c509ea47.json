{"ast":null,"code":"import _slicedToArray from\"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form}from'react-bootstrap';import{fetchSearchedCrypto}from'../../redux/actions';import{useSelector,useDispatch}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";var CryptoSearch=function CryptoSearch(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),searchedCryptoData=_useState4[0],setSearchedCryptoData=_useState4[1];var dispatch=useDispatch();var allCryptoMarket=useSelector(function(state){return state.crypto.all_crypto_market;});// console.log()\nuseEffect(function(e){handleSearch();dispatch(fetchSearchedCrypto(searchedCryptoData));},[searchedCryptoData]);console.log(query);var handleSearch=function handleSearch(){return allCryptoMarket.filter(function(crypto){return crypto.name.toLowerCase()===query.toLowerCase()?(setSearchedCryptoData(crypto),dispatch(fetchSearchedCrypto(searchedCryptoData))):dispatch(fetchSearchedCrypto({}));});};console.log(searchedCryptoData);return/*#__PURE__*/_jsx(\"div\",{className:\"sticky top-40 z-40 bg-gray-900 focus:ring-2 focus:ring-blue-600\",children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"search\",placeholder:\"search with crypto name\",value:query,onChange:function onChange(e){return setQuery(e.target.value);},onKeyUp:function onKeyUp(){return handleSearch();}})})})});};export default CryptoSearch;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/CryptoSearch.jsx"],"names":["React","useEffect","useState","Form","fetchSearchedCrypto","useSelector","useDispatch","CryptoSearch","query","setQuery","searchedCryptoData","setSearchedCryptoData","dispatch","allCryptoMarket","state","crypto","all_crypto_market","e","handleSearch","console","log","filter","name","toLowerCase","target","value"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,2CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAoDP,QAAQ,CAAC,EAAD,CAA5D,yCAAOQ,kBAAP,eAA2BC,qBAA3B,eAEA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,eAAe,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaC,iBAAjB,EAAN,CAAnC,CAEA;AAEAf,SAAS,CAAC,SAACgB,CAAD,CAAO,CACbC,YAAY,GACZN,QAAQ,CAACR,mBAAmB,CAACM,kBAAD,CAApB,CAAR,CACH,CAHQ,CAGN,CAACA,kBAAD,CAHM,CAAT,CAKAS,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAGA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEvB,MAAOL,CAAAA,eAAe,CAACQ,MAAhB,CAAuB,SAAAN,MAAM,QAAIA,CAAAA,MAAM,CAACO,IAAP,CAAYC,WAAZ,KAA8Bf,KAAK,CAACe,WAAN,EAA9B,EAAqDZ,qBAAqB,CAACI,MAAD,CAArB,CAA+BH,QAAQ,CAACR,mBAAmB,CAACM,kBAAD,CAApB,CAA5F,EAAyIE,QAAQ,CAACR,mBAAmB,CAAC,EAAD,CAApB,CAArJ,EAA7B,CAAP,CACH,CAHD,CAKAe,OAAO,CAACC,GAAR,CAAYV,kBAAZ,EAEA,mBACI,YAAK,SAAS,CAAC,iEAAf,uBACI,KAAC,IAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,2BAAvC,uBACI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,QAAnB,CAA4B,WAAW,CAAC,yBAAxC,CACI,KAAK,CAAEF,KADX,CAEI,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,QAAQ,CAACQ,CAAC,CAACO,MAAF,CAASC,KAAV,CAAf,EAFd,CAGI,OAAO,CAAE,yBAAMP,CAAAA,YAAY,EAAlB,EAHb,EADJ,EADJ,EADJ,EADJ,CAcH,CAtCD,CAwCA,cAAeX,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { fetchSearchedCrypto } from '../../redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst CryptoSearch = () => {\n    const [query, setQuery] = useState('')\n    const [searchedCryptoData, setSearchedCryptoData] = useState({})\n\n    const dispatch = useDispatch()\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n\n    // console.log()\n\n    useEffect((e) => {\n        handleSearch()\n        dispatch(fetchSearchedCrypto(searchedCryptoData))\n    }, [searchedCryptoData])\n\n    console.log(query)\n\n\n    const handleSearch = () => {\n\n        return allCryptoMarket.filter(crypto => crypto.name.toLowerCase() === query.toLowerCase() ? (setSearchedCryptoData(crypto), dispatch(fetchSearchedCrypto(searchedCryptoData))) : dispatch(fetchSearchedCrypto({})))\n    }\n\n    console.log(searchedCryptoData)\n\n    return (\n        <div className='sticky top-40 z-40 bg-gray-900 focus:ring-2 focus:ring-blue-600'>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control type=\"search\" placeholder=\"search with crypto name\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                        onKeyUp={() => handleSearch()}\n                    />\n                </Form.Group>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default CryptoSearch\n\n"]},"metadata":{},"sourceType":"module"}