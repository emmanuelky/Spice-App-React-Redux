{"ast":null,"code":"import _toConsumableArray from\"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import allCardImages from'../Games/MemoryGameImages/imagedata.json';import{selectedCardImage,imageVisibility,memoryGameTotalScore}from'../../redux/actions';import{useSelector,useDispatch}from'react-redux';import{shuffle}from'lodash';import{ImImages}from'react-icons/im';import'./MemoryGame.css';import{Alert}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MemoryGame=function MemoryGame(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cardImages=_useState2[0],setCardImages=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openedCard=_useState4[0],setOpenedCard=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),matched=_useState6[0],setMatched=_useState6[1];var dispatch=useDispatch();useEffect(function(){shuffle(cardImages);},[cardImages.length]);function flipCard(index){setOpenedCard(function(opened){return[].concat(_toConsumableArray(opened),[index]);});}var handLoadImage=function handLoadImage(){setCardImages([].concat(_toConsumableArray(allCardImages===null||allCardImages===void 0?void 0:allCardImages.images),_toConsumableArray(allCardImages===null||allCardImages===void 0?void 0:allCardImages.images)));dispatch(memoryGameTotalScore([]));};var handleGameReset=function handleGameReset(){setCardImages([]);setOpenedCard([]);setMatched([]);dispatch(memoryGameTotalScore([]));};var counter=0;// const checkDuplicates = [...new Set(matched)]\nvar gameScore=matched===null||matched===void 0?void 0:matched.map(function(matched,index){return index+1?counter+5:counter;});console.log(matched);// console.log(gameScore)\nuseEffect(function(){openedCard.filter(function(item,index){return openedCard.indexOf(item)===index;});if(openedCard<2)return;var firstMatched=cardImages[openedCard[0]];var secondMatched=cardImages[openedCard[1]];if(secondMatched&&firstMatched.id===secondMatched.id){setMatched([].concat(_toConsumableArray(matched.filter(function(item,index){return matched.indexOf(item)===index;})),[firstMatched.id]));//    check duplicates, only pass unique image id to matched array\n// matched.filter((item, index) => matched.indexOf(item) === index)\n}if(openedCard.length===2)setTimeout(function(){return setOpenedCard([]);},1000);dispatch(memoryGameTotalScore(gameScore));},[openedCard]);return/*#__PURE__*/_jsxs(_Fragment,{children:[matched.length===21?/*#__PURE__*/_jsxs(Alert,{variant:\"success\",className:\"text-center\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"Congratulations! You WON!!!\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleGameReset();},className:\"text-gray-200 bg-green-600 text-xl my-2 p-2 rounded-lg\",children:\"Play again!\"})]}):'',/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap\",children:cardImages===null||cardImages===void 0?void 0:cardImages.map(function(img,index){var isFlipped=false;if(openedCard.includes(index))isFlipped=true;if(matched.includes(img.id))isFlipped=true;return/*#__PURE__*/_jsx(\"div\",{className:\"image-card m-1 border-b border-t-2 border-r-2 border-l-2 border-pink-400 \".concat(isFlipped?\"flipped\":\"\",\" \"),onClick:function onClick(){return flipCard(index);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"front\",children:/*#__PURE__*/_jsx(\"img\",{src:img.image,alt:\"\",className:\"w-100 h-100 rounded-lg\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"back bg-indigo-900 hover:bg-indigo-400\"})]})},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:cardImages.length===0?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handLoadImage();},className:\"text-gray-200 bg-indigo-900 text-xl my-5 p-2 rounded-lg\",children:\"START GAME\"}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleGameReset();},className:\"text-gray-200 bg-red-600 text-xl my-2 p-2 rounded-lg\",children:\"END GAME\"})})]});};export default MemoryGame;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Games/MemoryGame.jsx"],"names":["React","useState","useEffect","allCardImages","selectedCardImage","imageVisibility","memoryGameTotalScore","useSelector","useDispatch","shuffle","ImImages","Alert","MemoryGame","cardImages","setCardImages","openedCard","setOpenedCard","matched","setMatched","dispatch","length","flipCard","index","opened","handLoadImage","images","handleGameReset","counter","gameScore","map","console","log","filter","item","indexOf","firstMatched","secondMatched","id","setTimeout","img","isFlipped","includes","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport allCardImages from '../Games/MemoryGameImages/imagedata.json'\nimport { selectedCardImage, imageVisibility, memoryGameTotalScore } from '../../redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { shuffle } from 'lodash'\nimport { ImImages } from 'react-icons/im'\nimport './MemoryGame.css'\nimport { Alert } from 'react-bootstrap'\n\n\nconst MemoryGame = () => {\n    const [cardImages, setCardImages] = useState([])\n    const [openedCard, setOpenedCard] = useState([]);\n    const [matched, setMatched] = useState([]);\n\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        shuffle(cardImages)\n    }, [cardImages.length])\n\n    function flipCard(index) {\n        setOpenedCard((opened) => [...opened, index]);\n    }\n\n    const handLoadImage = () => {\n        setCardImages([...allCardImages?.images, ...allCardImages?.images])\n        dispatch(memoryGameTotalScore([]))\n\n\n\n    }\n\n    const handleGameReset = () => {\n        setCardImages([])\n        setOpenedCard([])\n        setMatched([])\n        dispatch(memoryGameTotalScore([]))\n\n\n    }\n\n    let counter = 0\n\n    // const checkDuplicates = [...new Set(matched)]\n\n    const gameScore = matched?.map((matched, index) => index + 1 ? counter + 5 : counter)\n\n\n    console.log(matched)\n\n\n    // console.log(gameScore)\n\n    useEffect(() => {\n\n\n        openedCard.filter((item, index) => openedCard.indexOf(item) === index)\n        if (openedCard < 2) return;\n\n        const firstMatched = cardImages[openedCard[0]];\n        const secondMatched = cardImages[openedCard[1]];\n\n        if (secondMatched && firstMatched.id === secondMatched.id) {\n            setMatched([...matched.filter((item, index) => matched.indexOf(item) === index), firstMatched.id]);\n            //    check duplicates, only pass unique image id to matched array\n            // matched.filter((item, index) => matched.indexOf(item) === index)\n\n        }\n\n        if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\n\n\n        dispatch(memoryGameTotalScore(gameScore))\n\n\n\n    }, [openedCard]);\n\n\n\n\n\n\n\n    return (\n        <>\n            {\n\n\n\n                matched.length === 21 ? <Alert variant=\"success\" className=\"text-center\">\n                    <Alert.Heading>Congratulations! You WON!!!</Alert.Heading>\n\n                    <hr />\n                    <button onClick={() => handleGameReset()} className=\"text-gray-200 bg-green-600 text-xl my-2 p-2 rounded-lg\">Play again!</button>\n\n                </Alert>\n\n\n                    : ''\n\n\n            }\n            <div className=\"flex flex-wrap\">\n\n\n                {cardImages?.map((img, index) => {\n\n                    let isFlipped = false;\n\n                    if (openedCard.includes(index)) isFlipped = true;\n                    if (matched.includes(img.id)) isFlipped = true;\n                    return (\n                        <div\n                            className={`image-card m-1 border-b border-t-2 border-r-2 border-l-2 border-pink-400 ${isFlipped ? \"flipped\" : \"\"} `}\n                            key={index}\n                            onClick={() => flipCard(index)}\n                        >\n                            <div className=\"inner\">\n                                <div className=\"front\">\n                                    <img\n                                        src={img.image}\n                                        alt=\"\"\n                                        className='w-100 h-100 rounded-lg'\n                                    />\n                                </div>\n                                <div className=\"back bg-indigo-900 hover:bg-indigo-400\"></div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n\n\n            <div className='text-center'>\n                {cardImages.length === 0\n                    ?\n                    <button onClick={() => handLoadImage()} className=\"text-gray-200 bg-indigo-900 text-xl my-5 p-2 rounded-lg\">START GAME</button>\n                    :\n                    <button onClick={() => handleGameReset()} className=\"text-gray-200 bg-red-600 text-xl my-2 p-2 rounded-lg\">END GAME</button>\n                }\n            </div>\n        </>\n    );\n}\n\n\n\n\nexport default MemoryGame\n\n\n"]},"metadata":{},"sourceType":"module"}