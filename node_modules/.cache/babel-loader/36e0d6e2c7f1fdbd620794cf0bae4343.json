{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const lastMessageView = useRef(null);\n  const allPosts = useSelector(state => state.posts.posts);\n  const newpost = allPosts.map(post => post.id);\n  console.log(newpost);\n  const fetchAllComments = useSelector(state => state.posts.comments);\n  const fetchedComment = fetchAllComments.find(comment => comment.post_Id);\n  useEffect(() => {\n    if (fetchAllComments.length - 1 && lastMessageView.current) {\n      lastMessageView.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [fetchAllComments.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Comments, \"IM3Um6063KLNngJMn681Dq73YXw=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Comments.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Comments","lastMessageView","allPosts","state","posts","newpost","map","post","id","console","log","fetchAllComments","comments","fetchedComment","find","comment","post_Id","length","current","scrollIntoView","behavior"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,eAAe,GAAGJ,MAAM,CAAC,IAAD,CAA9B;AAEA,QAAMK,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAtB,CAA5B;AACA,QAAMC,OAAO,GAAGH,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAA1B,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,QAAMM,gBAAgB,GAAGb,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYQ,QAAtB,CAApC;AAGA,QAAMC,cAAc,GAAGF,gBAAgB,CAACG,IAAjB,CAAsBC,OAAO,IAAIA,OAAO,CAACC,OAAzC,CAAvB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,gBAAgB,CAACM,MAAjB,GAA0B,CAA1B,IAA+BhB,eAAe,CAACiB,OAAnD,EAA4D;AACxDjB,MAAAA,eAAe,CAACiB,OAAhB,CAAwBC,cAAxB,CAAuC;AACnCC,QAAAA,QAAQ,EAAE;AADyB,OAAvC;AAGH;AACJ,GANQ,EAMN,CAACT,gBAAgB,CAACM,MAAlB,CANM,CAAT;AASA,sBACI,qCADJ;AAuBH,CA7CD;;GAAMjB,Q;UAIeF,W,EAIQA,W;;;KARvBE,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst Comments = () => {\n\n    const lastMessageView = useRef(null);\n\n    const allPosts = useSelector(state => state.posts.posts)\n    const newpost = allPosts.map(post => post.id)\n    console.log(newpost)\n\n    const fetchAllComments = useSelector(state => state.posts.comments)\n\n\n    const fetchedComment = fetchAllComments.find(comment => comment.post_Id)\n\n    useEffect(() => {\n        if (fetchAllComments.length - 1 && lastMessageView.current) {\n            lastMessageView.current.scrollIntoView({\n                behavior: \"smooth\",\n            });\n        }\n    }, [fetchAllComments.length])\n\n\n    return (\n        <>\n            {/* <div className={` flex flex-col mx-1 overflow-y-auto h-80 `}>\n                {\n                    fetchAllComments?.map(comment => (\n                        <div ref={lastMessageView} className=\" bg-gray-50 rounded-lg my-2 px-2\">\n                            <div className=\"flex justify-between my-2\">\n                                <div className=\"flex align-items-center\">\n                                    <img className=\"h-5 w-5 rounded-full\" src={comment.user.image} alt=\"\" />\n                                    <i className=\"text-xs mx-2 font-bold\">{comment.user.firstName}</i>\n                                </div>\n                                <div>  <span className=\"text-xs\">@{comment.createdAt}</span></div>\n\n                            </div>\n                            <div className=\" mx-4 my-2\">\n                                <span className=\"text-lg break-words text-justify\">{comment.commentText}</span>\n                            </div>\n\n                        </div>))\n                }\n            </div> */}\n        </>\n    )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}