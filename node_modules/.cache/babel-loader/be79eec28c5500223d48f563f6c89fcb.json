{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { postsReducer } from '../reducers/postReducer';\nimport { usersReducer } from '../reducers/userReducer';\nimport { movieReducer } from '../reducers/moviesReducer';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nimport storage from 'redux-persist/lib/storage';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nexport const initialState = {\n  posts: {\n    posts: [],\n    likes: {\n      allLikes: [...state.likes, action.payload],\n      postLike: []\n    }\n  },\n  users: {\n    users: [],\n    loggedin: true,\n    getcurrentuser: {}\n  },\n  movies: {\n    movies: [],\n    movie_details: []\n  }\n};\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [encryptTransform({\n    secretKey: process.env.REACT_APP_ENCRYPT_KEY\n  })]\n};\nconst allReducers = combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n  movies: movieReducer\n});\nconst persistAllReducers = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistAllReducers, initialState, process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/redux/store/index.jsx"],"names":["createStore","applyMiddleware","combineReducers","compose","postsReducer","usersReducer","movieReducer","thunk","persistStore","persistReducer","encryptTransform","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","posts","likes","allLikes","state","action","payload","postLike","users","loggedin","getcurrentuser","movies","movie_details","persistConfig","key","transforms","secretKey","process","env","REACT_APP_ENCRYPT_KEY","allReducers","persistAllReducers","store","REACT_APP_DEVELOPMENT","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACC,OAAxB,CADP;AAEHC,MAAAA,QAAQ,EAAE;AAFP;AAFJ,GADiB;AAWxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,cAAc,EAAE;AAHb,GAXiB;AAgBxBC,EAAAA,MAAM,EAAE;AACJA,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,aAAa,EAAE;AAFX;AAhBgB,CAArB;AAwBP,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBlB,EAAAA,OAFkB;AAGlBmB,EAAAA,UAAU,EAAE,CACRpB,gBAAgB,CAAC;AACbqB,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,GAAD,CADR;AAHM,CAAtB;AAWA,MAAMC,WAAW,GAAGjC,eAAe,CAAC;AAChCc,EAAAA,KAAK,EAAEZ,YADyB;AAEhCmB,EAAAA,KAAK,EAAElB,YAFyB;AAGhCqB,EAAAA,MAAM,EAAEpB;AAHwB,CAAD,CAAnC;AAMA,MAAM8B,kBAAkB,GAAG3B,cAAc,CACrCmB,aADqC,EACtBO,WADsB,CAAzC;AAIA,OAAO,MAAME,KAAK,GAAGrC,WAAW,CAACoC,kBAAD,EAC5BrB,YAD4B,EAE5BiB,OAAO,CAACC,GAAR,CAAYK,qBAAZ,GAAoC1B,gBAAgB,CAACX,eAAe,CAACM,KAAD,CAAhB,CAApD,GAA+EJ,OAAO,CAACF,eAAe,CAACM,KAAD,CAAhB,CAF1D,CAAzB;AAIP,OAAO,MAAMgC,SAAS,GAAG/B,YAAY,CAAC6B,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { postsReducer } from '../reducers/postReducer'\nimport { usersReducer } from '../reducers/userReducer'\nimport { movieReducer } from '../reducers/moviesReducer'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { encryptTransform } from 'redux-persist-transform-encrypt'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\nexport const initialState = {\n    posts: {\n        posts: [],\n        likes: {\n            allLikes: [...state.likes, action.payload],\n            postLike: []\n\n\n        },\n\n    },\n    users: {\n        users: [],\n        loggedin: true,\n        getcurrentuser: {}\n    },\n    movies: {\n        movies: [],\n        movie_details: [],\n    }\n}\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [\n        encryptTransform({\n            secretKey: process.env.REACT_APP_ENCRYPT_KEY,\n        }),\n    ],\n}\n\n\nconst allReducers = combineReducers({\n    posts: postsReducer,\n    users: usersReducer,\n    movies: movieReducer\n})\n\nconst persistAllReducers = persistReducer(\n    persistConfig, allReducers\n)\n\nexport const store = createStore(persistAllReducers,\n    initialState,\n    process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)))\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}