{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Games/MemoryGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport cardImages from '../Games/MemoryGameImages/imagedata.json';\nimport { selectedCardImage, imageVisibility } from '../../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MemoryGame = () => {\n  _s();\n\n  var _allImages$images;\n\n  const [allImages, setAllImages] = useState([]);\n  const [target, setTarget] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const selectedImage = useSelector(state => state.games.selected_card_images);\n  const visibleImage = useSelector(state => state.games.visible);\n  console.log(allImages);\n  const imagesData = cardImages;\n\n  const handLoadImage = () => {\n    setAllImages(imagesData); // return imagesData?.images?.sort((a, b) => 0.5 - Math.random())\n  };\n\n  useEffect(() => {\n    // handLoadImage()\n    dispatch(imageVisibility());\n  }, []); // console.log(imagesData)\n\n  const handleImageClick = (e, img) => {// (selectedImage.filter(image => image.id === img.id) ? setVisible(!visibleImage) : setVisible(visibleImage))\n    // setVisible(!visible)\n    // console.log(target, 'click')\n    // }\n    // dispatch(selectedCardImage(img))\n  }; // w-20 h-20 opacity-100' : ' w-20 h-20 opacity-0\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap \",\n      children: allImages === null || allImages === void 0 ? void 0 : (_allImages$images = allImages.images) === null || _allImages$images === void 0 ? void 0 : _allImages$images.map((img, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ' border rounded-lg border-3 ',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: 'h-20 w-20',\n            src: img.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: Object.keys(allImages).length === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handLoadImage(),\n        className: \"text-gray-200 bg-indigo-900 text-3xl p-2 rounded-lg\",\n        children: \"End Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handLoadImage(),\n        className: \"text-gray-200 bg-indigo-900 text-3xl p-2 rounded-lg\",\n        children: \"START Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoryGame, \"FMxtGJ/6+1mhQG9DmtglgbmlGs4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MemoryGame;\nexport default MemoryGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Games/MemoryGame.jsx"],"names":["React","useState","useEffect","Container","Row","Col","cardImages","selectedCardImage","imageVisibility","useSelector","useDispatch","MemoryGame","allImages","setAllImages","target","setTarget","visible","setVisible","dispatch","selectedImage","state","games","selected_card_images","visibleImage","console","log","imagesData","handLoadImage","handleImageClick","e","img","images","map","i","image","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,qBAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMiB,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,aAAa,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,oBAAtB,CAAjC;AACA,QAAMC,YAAY,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYL,OAAtB,CAAhC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AAEA,QAAMc,UAAU,GAAGpB,UAAnB;;AAEA,QAAMqB,aAAa,GAAG,MAAM;AACxBd,IAAAA,YAAY,CAACa,UAAD,CAAZ,CADwB,CAExB;AACH,GAHD;;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAgB,IAAAA,QAAQ,CAACV,eAAe,EAAhB,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT,CAlBqB,CAuBrB;;AAGA,QAAMoB,gBAAgB,GAAG,CAACC,CAAD,EAAIC,GAAJ,KAAY,CACjC;AAEA;AACA;AACA;AACA;AACH,GAPD,CA1BqB,CAmCrB;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAEQlB,SAFR,aAEQA,SAFR,4CAEQA,SAAS,CAAEmB,MAFnB,sDAEQ,kBAAmBC,GAAnB,CAAuB,CAACF,GAAD,EAAMG,CAAN,kBACnB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAE,8BAAhB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAE,WAAhB;AAA6B,YAAA,GAAG,EAAEH,GAAG,CAACI,KAAtC;AAA6C,YAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYxB,SAAZ,EAAuByB,MAAvB,KAAkC,CAAlC,gBAEG;AAAQ,QAAA,OAAO,EAAE,MAAMV,aAAa,EAApC;AAAwC,QAAA,SAAS,EAAC,qDAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,gBAIG;AAAQ,QAAA,OAAO,EAAE,MAAMA,aAAa,EAApC;AAAwC,QAAA,SAAS,EAAC,qDAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA/DD;;GAAMhB,U;UAMeD,W,EACKD,W,EACDA,W;;;KARnBE,U;AAiEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport cardImages from '../Games/MemoryGameImages/imagedata.json'\nimport { selectedCardImage, imageVisibility } from '../../redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst MemoryGame = () => {\n\n    const [allImages, setAllImages] = useState([])\n    const [target, setTarget] = useState(null)\n    const [visible, setVisible] = useState(false)\n\n    const dispatch = useDispatch()\n    const selectedImage = useSelector(state => state.games.selected_card_images)\n    const visibleImage = useSelector(state => state.games.visible)\n    console.log(allImages)\n\n    const imagesData = cardImages\n\n    const handLoadImage = () => {\n        setAllImages(imagesData)\n        // return imagesData?.images?.sort((a, b) => 0.5 - Math.random())\n    }\n\n    useEffect(() => {\n        // handLoadImage()\n        dispatch(imageVisibility())\n    }, [])\n\n    // console.log(imagesData)\n\n\n    const handleImageClick = (e, img) => {\n        // (selectedImage.filter(image => image.id === img.id) ? setVisible(!visibleImage) : setVisible(visibleImage))\n\n        // setVisible(!visible)\n        // console.log(target, 'click')\n        // }\n        // dispatch(selectedCardImage(img))\n    }\n\n    // w-20 h-20 opacity-100' : ' w-20 h-20 opacity-0\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-wrap \">\n                {\n                    allImages?.images?.map((img, i) => (\n                        <>\n                            <div className={' border rounded-lg border-3 '}>\n                                <img className={'h-20 w-20'} src={img.image} alt=\"\" />\n                            </div>\n\n                        </>\n                    ))\n                }\n\n            </div>\n            <div className='text-center'>\n                {Object.keys(allImages).length === 0\n                    ?\n                    <button onClick={() => handLoadImage()} className=\"text-gray-200 bg-indigo-900 text-3xl p-2 rounded-lg\">End Game</button>\n                    :\n                    <button onClick={() => handLoadImage()} className=\"text-gray-200 bg-indigo-900 text-3xl p-2 rounded-lg\">START Game</button>\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default MemoryGame\n"]},"metadata":{},"sourceType":"module"}