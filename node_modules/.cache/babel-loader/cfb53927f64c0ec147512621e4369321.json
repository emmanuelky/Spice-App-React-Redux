{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Feeds/CurrentTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrentTime = () => {\n  _s();\n\n  const [cTime, setCTime] = useState();\n\n  const timer = () => {\n    let currentTime = new Date();\n    let hours = currentTime.getHours();\n    let minutes = currentTime.getMinutes();\n    let sec = currentTime.getSeconds();\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    let time = hours + \":\" + minutes + \":\" + sec + \" \";\n\n    if (hours > 11) {\n      time += \"PM\";\n    } else {\n      time += \"AM\";\n    }\n\n    setCTime(time);\n    setTimeout(timer, 1000);\n  };\n\n  useEffect(() => {\n    timer();\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: moment().format('ll')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-300 text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CurrentTime, \"gP2WaGl8xE8s96bgRoeQW7hNhgg=\");\n\n_c = CurrentTime;\nexport default CurrentTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentTime\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Feeds/CurrentTime.jsx"],"names":["React","useEffect","useState","moment","CurrentTime","cTime","setCTime","timer","currentTime","Date","hours","getHours","minutes","getMinutes","sec","getSeconds","time","setTimeout","format"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;;AAGA,QAAMK,KAAK,GAAG,MAAM;AAChB,QAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,KAAK,GAAGF,WAAW,CAACG,QAAZ,EAAZ;AACA,QAAIC,OAAO,GAAGJ,WAAW,CAACK,UAAZ,EAAd;AACA,QAAIC,GAAG,GAAGN,WAAW,CAACO,UAAZ,EAAV;;AACA,QAAIH,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAIE,GAAG,GAAG,EAAV,EAAc;AACVA,MAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,QAAIE,IAAI,GAAGN,KAAK,GAAG,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,GAA9B,GAAoC,GAA/C;;AACA,QAAIJ,KAAK,GAAG,EAAZ,EAAgB;AACZM,MAAAA,IAAI,IAAI,IAAR;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,IAAI,IAAR;AACH;;AACDV,IAAAA,QAAQ,CAACU,IAAD,CAAR;AACAC,IAAAA,UAAU,CAACV,KAAD,EAAQ,IAAR,CAAV;AACH,GAnBD;;AAsBAN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK;AACR,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACI;AAAA,gBAAMJ,MAAM,GAAGe,MAAT,CAAgB,IAAhB;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BAAuC;AAAA,kBAAMb;AAAN;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApCD;;GAAMD,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\n\n\nconst CurrentTime = () => {\n    const [cTime, setCTime] = useState()\n\n\n    const timer = () => {\n        let currentTime = new Date()\n        let hours = currentTime.getHours()\n        let minutes = currentTime.getMinutes()\n        let sec = currentTime.getSeconds()\n        if (minutes < 10) {\n            minutes = \"0\" + minutes\n        }\n        if (sec < 10) {\n            sec = \"0\" + sec\n        }\n        let time = hours + \":\" + minutes + \":\" + sec + \" \";\n        if (hours > 11) {\n            time += \"PM\";\n        } else {\n            time += \"AM\";\n        }\n        setCTime(time)\n        setTimeout(timer, 1000);\n    }\n\n\n    useEffect(() => {\n        timer()\n    }, [timer])\n    return (\n        <div className=''>\n            <div>{moment().format('ll')}</div>\n            <div className='text-gray-300 text-sm'><div>{cTime}</div></div>\n\n        </div>\n    )\n}\n\nexport default CurrentTime\n"]},"metadata":{},"sourceType":"module"}