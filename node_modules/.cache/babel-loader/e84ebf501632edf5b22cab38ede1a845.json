{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const lastMessageView = useRef(null);\n  const postID = useSelector(state => state.posts.post_id);\n  const fetchAllComments = useSelector(state => state.posts.comments);\n  const uniquePostComments = fetchAllComments.filter(comment => comment.data.post_Id === postID);\n  const totalComments = uniquePostComments.length;\n  console.log(uniquePostComments);\n  useEffect(() => {\n    if (fetchAllComments.length - 1 && lastMessageView.current) {\n      lastMessageView.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [fetchAllComments.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` flex flex-col mx-1 overflow-y-auto h-80 `,\n      children: uniquePostComments === null || uniquePostComments === void 0 ? void 0 : uniquePostComments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lastMessageView,\n        className: \" bg-gray-50 rounded-lg my-2 px-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"h-5 w-5 rounded-full\",\n              src: comment.data.user.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"text-xs mx-2 font-bold\",\n              children: comment.data.user.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: [\"@\", comment.data.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" mx-4 my-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg break-words text-justify\",\n            children: comment.data.commentText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, comment.data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comments, \"27js9OqrkuPDJV4ffFzA3ntFaXE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Comments.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Comments","lastMessageView","postID","state","posts","post_id","fetchAllComments","comments","uniquePostComments","filter","comment","data","post_Id","totalComments","length","console","log","current","scrollIntoView","behavior","map","user","image","firstName","createdAt","commentText","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,eAAe,GAAGJ,MAAM,CAAC,IAAD,CAA9B;AAEA,QAAMK,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAtB,CAA1B;AACA,QAAMC,gBAAgB,GAAGR,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,QAAtB,CAApC;AAEA,QAAMC,kBAAkB,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,OAAb,KAAyBV,MAA5D,CAA3B;AAEA,QAAMW,aAAa,GAAGL,kBAAkB,CAACM,MAAzC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,kBAAZ;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIU,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IAA+Bb,eAAe,CAACgB,OAAnD,EAA4D;AACxDhB,MAAAA,eAAe,CAACgB,OAAhB,CAAwBC,cAAxB,CAAuC;AACnCC,QAAAA,QAAQ,EAAE;AADyB,OAAvC;AAGH;AACJ,GAPQ,EAON,CAACb,gBAAgB,CAACQ,MAAlB,CAPM,CAAT;AAUA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,2CAAjB;AAAA,gBAEQN,kBAFR,aAEQA,kBAFR,uBAEQA,kBAAkB,CAAEY,GAApB,CAAwBV,OAAO,iBAC3B;AAA2B,QAAA,GAAG,EAAET,eAAhC;AAAiD,QAAA,SAAS,EAAC,kCAA3D;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,GAAG,EAAES,OAAO,CAACC,IAAR,CAAaU,IAAb,CAAkBC,KAA7D;AAAoE,cAAA,GAAG,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,wBAAb;AAAA,wBAAuCZ,OAAO,CAACC,IAAR,CAAaU,IAAb,CAAkBE;AAAzD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,0CAAO;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA,8BAA4Bb,OAAO,CAACC,IAAR,CAAaa,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,kCAAhB;AAAA,sBAAoDd,OAAO,CAACC,IAAR,CAAac;AAAjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA,SAAUf,OAAO,CAACC,IAAR,CAAae,EAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuBH,CA9CD;;GAAM1B,Q;UAIaF,W,EACUA,W;;;KALvBE,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst Comments = () => {\n\n    const lastMessageView = useRef(null);\n\n    const postID = useSelector(state => state.posts.post_id)\n    const fetchAllComments = useSelector(state => state.posts.comments)\n\n    const uniquePostComments = fetchAllComments.filter(comment => comment.data.post_Id === postID)\n\n    const totalComments = uniquePostComments.length\n\n    console.log(uniquePostComments)\n\n    useEffect(() => {\n\n        if (fetchAllComments.length - 1 && lastMessageView.current) {\n            lastMessageView.current.scrollIntoView({\n                behavior: \"smooth\",\n            });\n        }\n    }, [fetchAllComments.length])\n\n\n    return (\n        <>\n            <div className={` flex flex-col mx-1 overflow-y-auto h-80 `}>\n                {\n                    uniquePostComments?.map(comment => (\n                        <div key={comment.data.id} ref={lastMessageView} className=\" bg-gray-50 rounded-lg my-2 px-2\">\n                            <div className=\"flex justify-between my-2\">\n                                <div className=\"flex align-items-center\">\n                                    <img className=\"h-5 w-5 rounded-full\" src={comment.data.user.image} alt=\"\" />\n                                    <i className=\"text-xs mx-2 font-bold\">{comment.data.user.firstName}</i>\n                                </div>\n                                <div>  <span className=\"text-xs\">@{comment.data.createdAt}</span></div>\n\n                            </div>\n                            <div className=\" mx-4 my-2\">\n                                <span className=\"text-lg break-words text-justify\">{comment.data.commentText}</span>\n                            </div>\n\n                        </div>))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}