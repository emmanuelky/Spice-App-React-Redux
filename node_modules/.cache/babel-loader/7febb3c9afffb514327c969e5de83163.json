{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/Controls.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState } from \"react\";\nimport PropTypes from \"prop-types\"; // import Typography from \"@material-ui/core/Typography\";\n// import { makeStyles, withStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import BookmarkIcon from \"@material-ui/icons/Bookmark\";\n// import FastRewindIcon from \"@material-ui/icons/FastRewind\";\n// import FastForwardIcon from \"@material-ui/icons/FastForward\";\n// import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\n// import PauseIcon from \"@material-ui/icons/Pause\";\n// import Slider from \"@material-ui/core/Slider\";\n// import Tooltip from \"@material-ui/core/Tooltip\";\n// import Grid from \"@material-ui/core/Grid\";\n// import VolumeUp from \"@material-ui/icons/VolumeUp\";\n// import VolumeDown from \"@material-ui/icons/VolumeDown\";\n// import VolumeMute from \"@material-ui/icons/VolumeOff\";\n// import FullScreen from \"@material-ui/icons/Fullscreen\";\n// import Popover from \"@material-ui/core/Popover\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  controlsWrapper: {\n    visibility: \"hidden\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: \"100%\",\n    background: \"rgba(0,0,0,0.6)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  controlIcons: {\n    color: \"#777\",\n    fontSize: 50,\n    transform: \"scale(0.9)\",\n    \"&:hover\": {\n      color: \"#fff\",\n      transform: \"scale(1)\"\n    }\n  },\n  bottomIcons: {\n    color: \"#999\",\n    \"&:hover\": {\n      color: \"#fff\"\n    }\n  },\n  volumeSlider: {\n    width: 100\n  }\n}));\nconst PrettoSlider = withStyles({\n  root: {\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ValueLabelComponent;\nconst Controls = /*#__PURE__*/forwardRef(_c2 = _s(({\n  onSeek,\n  onSeekMouseDown,\n  onSeekMouseUp,\n  onDuration,\n  onRewind,\n  onPlayPause,\n  onFastForward,\n  playing,\n  played,\n  elapsedTime,\n  totalDuration,\n  onMute,\n  muted,\n  onVolumeSeekDown,\n  onChangeDispayFormat,\n  playbackRate,\n  onPlaybackRateChange,\n  onToggleFullScreen,\n  volume,\n  onVolumeChange,\n  onBookmark\n}, ref) => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: classes.controlsWrapper,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      style: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"space-between\",\n        style: true,\n        style: {\n          padding: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              color: \"#fff\"\n            },\n            children: \"Video Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onBookmark,\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 44\n            }, this),\n            children: \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onRewind,\n          className: classes.controlIcons,\n          \"aria-label\": \"rewind\",\n          children: /*#__PURE__*/_jsxDEV(FastRewindIcon, {\n            className: classes.controlIcons,\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onPlayPause,\n          className: classes.controlIcons,\n          \"aria-label\": \"play\",\n          children: playing ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onFastForward,\n          className: classes.controlIcons,\n          \"aria-label\": \"forward\",\n          children: /*#__PURE__*/_jsxDEV(FastForwardIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        style: {\n          padding: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(PrettoSlider, {\n            min: 0,\n            max: 100,\n            ValueLabelComponent: props => /*#__PURE__*/_jsxDEV(ValueLabelComponent, { ...props,\n              value: elapsedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this),\n            \"aria-label\": \"custom thumb label\",\n            value: played * 100,\n            onChange: onSeek,\n            onMouseDown: onSeekMouseDown,\n            onChangeCommitted: onSeekMouseUp,\n            onDuration: onDuration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onPlayPause,\n              className: classes.bottomIcons,\n              children: playing ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(IconButton // onClick={() => setState({ ...state, muted: !state.muted })}\n            , {\n              onClick: onMute,\n              className: `${classes.bottomIcons} ${classes.volumeButton}`,\n              children: muted ? /*#__PURE__*/_jsxDEV(VolumeMute, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this) : volume > 0.5 ? /*#__PURE__*/_jsxDEV(VolumeUp, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeDown, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 0,\n              max: 100,\n              value: muted ? 0 : volume * 100,\n              onChange: onVolumeChange,\n              \"aria-labelledby\": \"input-slider\",\n              className: classes.volumeSlider,\n              onMouseDown: onSeekMouseDown,\n              onChangeCommitted: onVolumeSeekDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: onChangeDispayFormat //     () =>\n              //   setTimeDisplayFormat(\n              //     timeDisplayFormat == \"normal\" ? \"remaining\" : \"normal\"\n              //   )\n              ,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  color: \"#fff\",\n                  marginLeft: 16\n                },\n                children: [elapsedTime, \"/\", totalDuration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClick,\n            \"aria-describedby\": id,\n            className: classes.bottomIcons,\n            variant: \"text\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [playbackRate, \"X\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Popover, {\n            container: ref.current,\n            open: open,\n            id: id,\n            onClose: handleClose,\n            anchorEl: anchorEl,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\"\n            },\n            transformOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column-reverse\",\n              children: [0.5, 1, 1.5, 2].map(rate => /*#__PURE__*/_jsxDEV(Button, {\n                //   onClick={() => setState({ ...state, playbackRate: rate })}\n                onClick: () => onPlaybackRateChange(rate),\n                variant: \"text\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: rate === playbackRate ? \"secondary\" : \"inherit\",\n                  children: [rate, \"X\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 45\n                }, this)\n              }, rate, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onToggleFullScreen,\n            className: classes.bottomIcons,\n            children: /*#__PURE__*/_jsxDEV(FullScreen, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 13\n  }, this);\n}, \"vXA32r6EXukv831dcFOknrOnVCE=\", false, function () {\n  return [useStyles];\n}));\n_c3 = Controls;\nControls.propTypes = {\n  onSeek: PropTypes.func,\n  onSeekMouseDown: PropTypes.func,\n  onSeekMouseUp: PropTypes.func,\n  onDuration: PropTypes.func,\n  onRewind: PropTypes.func,\n  onPlayPause: PropTypes.func,\n  onFastForward: PropTypes.func,\n  onVolumeSeekDown: PropTypes.func,\n  onChangeDispayFormat: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onToggleFullScreen: PropTypes.func,\n  onMute: PropTypes.func,\n  playing: PropTypes.bool,\n  played: PropTypes.number,\n  elapsedTime: PropTypes.string,\n  totalDuration: PropTypes.string,\n  muted: PropTypes.bool,\n  playbackRate: PropTypes.number\n};\nexport default Controls;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ValueLabelComponent\");\n$RefreshReg$(_c2, \"Controls$forwardRef\");\n$RefreshReg$(_c3, \"Controls\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/Controls.jsx"],"names":["React","forwardRef","useState","PropTypes","useStyles","makeStyles","theme","controlsWrapper","visibility","position","top","left","right","bottom","height","background","display","flexDirection","justifyContent","button","margin","spacing","controlIcons","color","fontSize","transform","bottomIcons","volumeSlider","width","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","track","borderRadius","rail","Slider","ValueLabelComponent","props","children","open","value","Controls","onSeek","onSeekMouseDown","onSeekMouseUp","onDuration","onRewind","onPlayPause","onFastForward","playing","played","elapsedTime","totalDuration","onMute","muted","onVolumeSeekDown","onChangeDispayFormat","playbackRate","onPlaybackRateChange","onToggleFullScreen","volume","onVolumeChange","onBookmark","ref","classes","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","Boolean","id","undefined","flexGrow","padding","volumeButton","current","vertical","horizontal","map","rate","propTypes","func","bool","number","string"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// import Typography from \"@material-ui/core/Typography\";\n// import { makeStyles, withStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import BookmarkIcon from \"@material-ui/icons/Bookmark\";\n// import FastRewindIcon from \"@material-ui/icons/FastRewind\";\n// import FastForwardIcon from \"@material-ui/icons/FastForward\";\n// import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\n// import PauseIcon from \"@material-ui/icons/Pause\";\n// import Slider from \"@material-ui/core/Slider\";\n// import Tooltip from \"@material-ui/core/Tooltip\";\n// import Grid from \"@material-ui/core/Grid\";\n// import VolumeUp from \"@material-ui/icons/VolumeUp\";\n// import VolumeDown from \"@material-ui/icons/VolumeDown\";\n// import VolumeMute from \"@material-ui/icons/VolumeOff\";\n// import FullScreen from \"@material-ui/icons/Fullscreen\";\n// import Popover from \"@material-ui/core/Popover\";\n\nconst useStyles = makeStyles((theme) => ({\n    controlsWrapper: {\n        visibility: \"hidden\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        height: \"100%\",\n        background: \"rgba(0,0,0,0.6)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n\n    button: {\n        margin: theme.spacing(1),\n    },\n    controlIcons: {\n        color: \"#777\",\n\n        fontSize: 50,\n        transform: \"scale(0.9)\",\n        \"&:hover\": {\n            color: \"#fff\",\n            transform: \"scale(1)\",\n        },\n    },\n\n    bottomIcons: {\n        color: \"#999\",\n        \"&:hover\": {\n            color: \"#fff\",\n        },\n    },\n\n    volumeSlider: {\n        width: 100,\n    },\n}));\n\nconst PrettoSlider = withStyles({\n    root: {\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        \"&:focus, &:hover, &$active\": {\n            boxShadow: \"inherit\",\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: \"calc(-50% + 4px)\",\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nconst Controls = forwardRef(\n    (\n        {\n            onSeek,\n            onSeekMouseDown,\n            onSeekMouseUp,\n            onDuration,\n            onRewind,\n            onPlayPause,\n            onFastForward,\n            playing,\n            played,\n            elapsedTime,\n            totalDuration,\n            onMute,\n            muted,\n            onVolumeSeekDown,\n            onChangeDispayFormat,\n            playbackRate,\n            onPlaybackRateChange,\n            onToggleFullScreen,\n            volume,\n            onVolumeChange,\n            onBookmark,\n        },\n        ref\n    ) => {\n        const classes = useStyles();\n        const [anchorEl, setAnchorEl] = React.useState(null);\n        const handleClick = (event) => {\n            setAnchorEl(event.currentTarget);\n        };\n\n        const handleClose = () => {\n            setAnchorEl(null);\n        };\n\n        const open = Boolean(anchorEl);\n        const id = open ? \"simple-popover\" : undefined;\n\n        return (\n            <div ref={ref} className={classes.controlsWrapper}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    style={{ flexGrow: 1 }}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        justify=\"space-between\"\n                        style\n                        style={{ padding: 16 }}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h5\" style={{ color: \"#fff\" }}>\n                                Video Title\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                onClick={onBookmark}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                startIcon={<BookmarkIcon />}\n                            >\n                                Bookmark\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                        <IconButton\n                            onClick={onRewind}\n                            className={classes.controlIcons}\n                            aria-label=\"rewind\"\n                        >\n                            <FastRewindIcon\n                                className={classes.controlIcons}\n                                fontSize=\"inherit\"\n                            />\n                        </IconButton>\n                        <IconButton\n                            onClick={onPlayPause}\n                            className={classes.controlIcons}\n                            aria-label=\"play\"\n                        >\n                            {playing ? (\n                                <PauseIcon fontSize=\"inherit\" />\n                            ) : (\n                                <PlayArrowIcon fontSize=\"inherit\" />\n                            )}\n                        </IconButton>\n                        <IconButton\n                            onClick={onFastForward}\n                            className={classes.controlIcons}\n                            aria-label=\"forward\"\n                        >\n                            <FastForwardIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Grid>\n                    {/* bottom controls */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                        style={{ padding: 16 }}\n                    >\n                        <Grid item xs={12}>\n                            <PrettoSlider\n                                min={0}\n                                max={100}\n                                ValueLabelComponent={(props) => (\n                                    <ValueLabelComponent {...props} value={elapsedTime} />\n                                )}\n                                aria-label=\"custom thumb label\"\n                                value={played * 100}\n                                onChange={onSeek}\n                                onMouseDown={onSeekMouseDown}\n                                onChangeCommitted={onSeekMouseUp}\n                                onDuration={onDuration}\n                            />\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container alignItems=\"center\">\n                                <IconButton\n                                    onClick={onPlayPause}\n                                    className={classes.bottomIcons}\n                                >\n                                    {playing ? (\n                                        <PauseIcon fontSize=\"large\" />\n                                    ) : (\n                                        <PlayArrowIcon fontSize=\"large\" />\n                                    )}\n                                </IconButton>\n\n                                <IconButton\n                                    // onClick={() => setState({ ...state, muted: !state.muted })}\n                                    onClick={onMute}\n                                    className={`${classes.bottomIcons} ${classes.volumeButton}`}\n                                >\n                                    {muted ? (\n                                        <VolumeMute fontSize=\"large\" />\n                                    ) : volume > 0.5 ? (\n                                        <VolumeUp fontSize=\"large\" />\n                                    ) : (\n                                        <VolumeDown fontSize=\"large\" />\n                                    )}\n                                </IconButton>\n\n                                <Slider\n                                    min={0}\n                                    max={100}\n                                    value={muted ? 0 : volume * 100}\n                                    onChange={onVolumeChange}\n                                    aria-labelledby=\"input-slider\"\n                                    className={classes.volumeSlider}\n                                    onMouseDown={onSeekMouseDown}\n                                    onChangeCommitted={onVolumeSeekDown}\n                                />\n                                <Button\n                                    variant=\"text\"\n                                    onClick={\n                                        onChangeDispayFormat\n                                        //     () =>\n                                        //   setTimeDisplayFormat(\n                                        //     timeDisplayFormat == \"normal\" ? \"remaining\" : \"normal\"\n                                        //   )\n                                    }\n                                >\n                                    <Typography\n                                        variant=\"body1\"\n                                        style={{ color: \"#fff\", marginLeft: 16 }}\n                                    >\n                                        {elapsedTime}/{totalDuration}\n                                    </Typography>\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item>\n                            <Button\n                                onClick={handleClick}\n                                aria-describedby={id}\n                                className={classes.bottomIcons}\n                                variant=\"text\"\n                            >\n                                <Typography>{playbackRate}X</Typography>\n                            </Button>\n\n                            <Popover\n                                container={ref.current}\n                                open={open}\n                                id={id}\n                                onClose={handleClose}\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\",\n                                }}\n                                transformOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\",\n                                }}\n                            >\n                                <Grid container direction=\"column-reverse\">\n                                    {[0.5, 1, 1.5, 2].map((rate) => (\n                                        <Button\n                                            key={rate}\n                                            //   onClick={() => setState({ ...state, playbackRate: rate })}\n                                            onClick={() => onPlaybackRateChange(rate)}\n                                            variant=\"text\"\n                                        >\n                                            <Typography\n                                                color={rate === playbackRate ? \"secondary\" : \"inherit\"}\n                                            >\n                                                {rate}X\n                                            </Typography>\n                                        </Button>\n                                    ))}\n                                </Grid>\n                            </Popover>\n                            <IconButton\n                                onClick={onToggleFullScreen}\n                                className={classes.bottomIcons}\n                            >\n                                <FullScreen fontSize=\"large\" />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n);\n\nControls.propTypes = {\n    onSeek: PropTypes.func,\n    onSeekMouseDown: PropTypes.func,\n    onSeekMouseUp: PropTypes.func,\n    onDuration: PropTypes.func,\n    onRewind: PropTypes.func,\n    onPlayPause: PropTypes.func,\n    onFastForward: PropTypes.func,\n    onVolumeSeekDown: PropTypes.func,\n    onChangeDispayFormat: PropTypes.func,\n    onPlaybackRateChange: PropTypes.func,\n    onToggleFullScreen: PropTypes.func,\n    onMute: PropTypes.func,\n    playing: PropTypes.bool,\n    played: PropTypes.number,\n    elapsedTime: PropTypes.string,\n    totalDuration: PropTypes.string,\n    muted: PropTypes.bool,\n    playbackRate: PropTypes.number,\n};\nexport default Controls;"]},"metadata":{},"sourceType":"module"}