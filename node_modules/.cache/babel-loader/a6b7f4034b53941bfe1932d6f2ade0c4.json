{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/MusicList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getMusicSearch } from '../../redux/actions';\nimport { Card, Button, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MusicList = () => {\n  _s();\n\n  var _musicList$;\n\n  const dispatch = useDispatch();\n  const musicList = useSelector(state => state.music.music_lists);\n  console.log(musicList);\n  const loading = useSelector(state => state.music.loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this) : (_musicList$ = musicList[0]) === null || _musicList$ === void 0 ? void 0 : _musicList$.data.data.map(music => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: music.preview // playing\n          ,\n          controls: true // width={200}\n          ,\n          pip: true,\n          stopOnUnmount: false,\n          loop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-10 h-10 flex\",\n            src: music.album.cover_medium,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-300 flex\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: music.title_short\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicList, \"hz96yZNIf0SqgWnCT/sqdi7QjF8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MusicList;\nexport default MusicList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/MusicList.jsx"],"names":["React","useEffect","useSelector","useDispatch","getMusicSearch","Card","Button","Spinner","Link","ReactPlayer","MusicList","dispatch","musicList","state","music","music_lists","console","log","loading","data","map","preview","album","cover_medium","title_short"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,iBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAMA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AAEpB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,WAAtB,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEA,QAAMM,OAAO,GAAGhB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,OAAtB,CAA3B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,cAEQA,OAAO,gBACA,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YADA,kBAEDN,SAAS,CAAC,CAAD,CAFR,gDAED,YAAcO,IAAd,CAAmBA,IAAnB,CAAwBC,GAAxB,CAA6BN,KAAD,iBAC7B;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAGG;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,qCAAmB,QAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,KAAK,CAACO,OAAxB,CACf;AADe;AAEf,UAAA,QAAQ,EAAE,IAFK,CAGf;AAHe;AAIf,UAAA,GAAG,EAAE,IAJU;AAKf,UAAA,aAAa,EAAE,KALA;AAMf,UAAA,IAAI,EAAE;AANS;AAAA;AAAA;AAAA;AAAA,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH,eAaG;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCAEI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAgC,YAAA,GAAG,EAAEP,KAAK,CAACQ,KAAN,CAAYC,YAAjD;AAA+D,YAAA,GAAG,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,uCAAqC;AAAA,sBAAOT,KAAK,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAxCD;;GAAMd,S;UAEeP,W,EACCD,W,EAGFA,W;;;KANdQ,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMusicSearch } from '../../redux/actions'\nimport { Card, Button, Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ReactPlayer from 'react-player'\n\n\n\n\n\nconst MusicList = () => {\n\n    const dispatch = useDispatch()\n    const musicList = useSelector(state => state.music.music_lists)\n    console.log(musicList)\n\n    const loading = useSelector(state => state.music.loading)\n\n    return (\n        <div className=\"\" >\n            {\n                loading\n                    ? (<Spinner animation=\"border\" variant=\"success\" />)\n                    : musicList[0]?.data.data.map((music) =>\n                    (<div className=\"flex\">\n                        {/* // <Link to={`/music/${music.id}/`} className=\"no-underline\"> */}\n\n                        <div className=''> <ReactPlayer url={music.preview}\n                            // playing\n                            controls={true}\n                            // width={200}\n                            pip={true}\n                            stopOnUnmount={false}\n                            loop={true}\n                        />\n\n                        </div>\n                        <div className='flex align-items-center'>\n\n                            <div>\n                                <img className='w-10 h-10 flex' src={music.album.cover_medium} alt=\"\" />  </div>\n                            <div className='text-gray-300 flex'> <span>{music.title_short}</span></div>\n                        </div>\n\n                        {/* // </Link> */}\n                    </div>)\n                    )\n            }\n        </div>\n    )\n}\n\nexport default MusicList\n"]},"metadata":{},"sourceType":"module"}