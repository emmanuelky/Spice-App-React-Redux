{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Movies/UpComingMovies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getMovieCategory } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpComingMovies = () => {\n  _s();\n\n  var _upComingMovies$0$dat;\n\n  const dispatch = useDispatch();\n  const upComingMovies = useSelector(state => state.movies.movie_category);\n  console.log(upComingMovies[0]);\n  useEffect(() => {\n    dispatch(getMovieCategory());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), (_upComingMovies$0$dat = upComingMovies[0].data.results) === null || _upComingMovies$0$dat === void 0 ? void 0 : _upComingMovies$0$dat.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-40 h-40 mx-4 my-5  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        className: \"img-fluid h-20 w-20\",\n        src: IMG_URL + movie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpComingMovies, \"/9POZM9yj9UP4w/XTpQUa96BoJ4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UpComingMovies;\nexport default UpComingMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpComingMovies\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Movies/UpComingMovies.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","getMovieCategory","UpComingMovies","dispatch","upComingMovies","state","movies","movie_category","console","log","data","results","map","movie","IMG_URL","poster_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAGzB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,cAAc,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,cAAvB,CAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAAC,CAAD,CAA1B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,2BAGQG,cAAc,CAAC,CAAD,CAAd,CAAkBM,IAAlB,CAAuBC,OAH/B,0DAGQ,sBAAgCC,GAAhC,CAAqCC,KAAD,iBAGhC,QAAC,IAAD;AAAqB,MAAA,SAAS,EAAC,4HAA/B;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,SAAS,EAAC,qBAAlC;AAAwD,QAAA,GAAG,EAAEC,OAAO,GAAGD,KAAK,CAACE;AAA7E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAWF,KAAK,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,YAHJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlCD;;GAAMd,c;UAGeF,W,EACMD,W;;;KAJrBG,c;AAoCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMovieCategory } from '../../redux/actions'\n\nconst UpComingMovies = () => {\n\n\n    const dispatch = useDispatch()\n    const upComingMovies = useSelector(state => state.movies.movie_category)\n    console.log(upComingMovies[0])\n\n    useEffect(() => {\n        dispatch(getMovieCategory())\n    }, [])\n\n\n\n\n    return (\n        <div className='text-gray-300'>\n            <h6>Upcoming Movies</h6>\n            {\n                upComingMovies[0].data.results?.map((movie) =>\n                (\n\n                    <Card key={movie.id} className='w-40 h-40 mx-4 my-5  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full' >\n                        <Card.Img variant=\"top\" className=\"img-fluid h-20 w-20\" src={IMG_URL + movie.poster_path} />\n                        <Card.Body>\n\n\n                        </Card.Body>\n                    </Card>\n\n                )\n                )\n            }\n        </div>\n    )\n}\n\nexport default UpComingMovies\n"]},"metadata":{},"sourceType":"module"}