{"ast":null,"code":"/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 1.6.0\n*/\n\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document; // FIXME: this type maybe false\n\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty = /*#__PURE__*/function getCrossBrowserProperty(property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\n\nvar TRANSFORM = /*#__PURE__*/getCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER = /*#__PURE__*/getCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION = /*#__PURE__*/getCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\nvar OPEN_CLOSED_CHARACTERS = [{\n  open: \"(\",\n  close: \")\"\n}, {\n  open: \"\\\"\",\n  close: \"\\\"\"\n}, {\n  open: \"'\",\n  close: \"'\"\n}, {\n  open: \"\\\\\\\"\",\n  close: \"\\\\\\\"\"\n}, {\n  open: \"\\\\'\",\n  close: \"\\\\'\"\n}];\nvar TINY_NUM = 0.0000001;\nvar DEFAULT_UNIT_PRESETS = {\n  \"cm\": function cm(pos) {\n    return pos * 96 / 2.54;\n  },\n  \"mm\": function mm(pos) {\n    return pos * 96 / 254;\n  },\n  \"in\": function _in(pos) {\n    return pos * 96;\n  },\n  \"pt\": function pt(pos) {\n    return pos * 96 / 72;\n  },\n  \"pc\": function pc(pos) {\n    return pos * 96 / 6;\n  },\n  \"%\": function _(pos, size) {\n    return pos * size / 100;\n  },\n  \"vw\": function vw(pos, size) {\n    if (size === void 0) {\n      size = window.innerWidth;\n    }\n\n    return pos / 100 * size;\n  },\n  \"vh\": function vh(pos, size) {\n    if (size === void 0) {\n      size = window.innerHeight;\n    }\n\n    return pos / 100 * size;\n  },\n  \"vmax\": function vmax(pos, size) {\n    if (size === void 0) {\n      size = Math.max(window.innerWidth, window.innerHeight);\n    }\n\n    return pos / 100 * size;\n  },\n  \"vmin\": function vmin(pos, size) {\n    if (size === void 0) {\n      size = Math.min(window.innerWidth, window.innerHeight);\n    }\n\n    return pos / 100 * size;\n  }\n};\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\n\nfunction dot(a1, a2, b1, b2) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n\nfunction isNumber(value) {\n  return typeof value === NUMBER;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n\nfunction isEqualSeparator(character, separator) {\n  var isCharacterSpace = character === \"\" || character == \" \";\n  var isSeparatorSpace = separator === \"\" || separator == \" \";\n  return isSeparatorSpace && isCharacterSpace || character === separator;\n}\n\nfunction findOpen(openCharacter, texts, index, length, openCloseCharacters) {\n  var isIgnore = findIgnore(openCharacter, texts, index);\n\n  if (!isIgnore) {\n    return findClose(openCharacter, texts, index + 1, length, openCloseCharacters);\n  }\n\n  return index;\n}\n\nfunction findIgnore(character, texts, index) {\n  if (!character.ignore) {\n    return null;\n  }\n\n  var otherText = texts.slice(Math.max(index - 3, 0), index + 3).join(\"\");\n  return new RegExp(character.ignore).exec(otherText);\n}\n\nfunction findClose(closeCharacter, texts, index, length, openCloseCharacters) {\n  var _loop_1 = function _loop_1(i) {\n    var character = texts[i].trim();\n\n    if (character === closeCharacter.close && !findIgnore(closeCharacter, texts, i)) {\n      return {\n        value: i\n      };\n    }\n\n    var nextIndex = i; // re open\n\n    var openCharacter = find(openCloseCharacters, function (_a) {\n      var open = _a.open;\n      return open === character;\n    });\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n    }\n\n    if (nextIndex === -1) {\n      return out_i_1 = i, \"break\";\n    }\n\n    i = nextIndex;\n    out_i_1 = i;\n  };\n\n  var out_i_1;\n\n  for (var i = index; i < length; ++i) {\n    var state_1 = _loop_1(i);\n\n    i = out_i_1;\n    if (typeof state_1 === \"object\") return state_1.value;\n    if (state_1 === \"break\") break;\n  }\n\n  return -1;\n}\n\nfunction splitText(text, splitOptions) {\n  var _a = isString(splitOptions) ? {\n    separator: splitOptions\n  } : splitOptions,\n      _b = _a.separator,\n      separator = _b === void 0 ? \",\" : _b,\n      isSeparateFirst = _a.isSeparateFirst,\n      isSeparateOnlyOpenClose = _a.isSeparateOnlyOpenClose,\n      _c = _a.isSeparateOpenClose,\n      isSeparateOpenClose = _c === void 0 ? isSeparateOnlyOpenClose : _c,\n      _d = _a.openCloseCharacters,\n      openCloseCharacters = _d === void 0 ? OPEN_CLOSED_CHARACTERS : _d;\n\n  var openClosedText = openCloseCharacters.map(function (_a) {\n    var open = _a.open,\n        close = _a.close;\n\n    if (open === close) {\n      return open;\n    }\n\n    return open + \"|\" + close;\n  }).join(\"|\");\n  var regexText = \"(\\\\s*\" + separator + \"\\\\s*|\" + openClosedText + \"|\\\\s+)\";\n  var regex = new RegExp(regexText, \"g\");\n  var texts = text.split(regex).filter(Boolean);\n  var length = texts.length;\n  var values = [];\n  var tempValues = [];\n\n  function resetTemp() {\n    if (tempValues.length) {\n      values.push(tempValues.join(\"\"));\n      tempValues = [];\n      return true;\n    }\n\n    return false;\n  }\n\n  var _loop_2 = function _loop_2(i) {\n    var character = texts[i].trim();\n    var nextIndex = i;\n    var openCharacter = find(openCloseCharacters, function (_a) {\n      var open = _a.open;\n      return open === character;\n    });\n    var closeCharacter = find(openCloseCharacters, function (_a) {\n      var close = _a.close;\n      return close === character;\n    });\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n\n      if (nextIndex !== -1 && isSeparateOpenClose) {\n        if (resetTemp() && isSeparateFirst) {\n          return out_i_2 = i, \"break\";\n        }\n\n        values.push(texts.slice(i, nextIndex + 1).join(\"\"));\n        i = nextIndex;\n\n        if (isSeparateFirst) {\n          return out_i_2 = i, \"break\";\n        }\n\n        return out_i_2 = i, \"continue\";\n      }\n    } else if (closeCharacter && !findIgnore(closeCharacter, texts, i)) {\n      throw new Error(\"invalid format: \" + closeCharacter.close);\n    } else if (isEqualSeparator(character, separator) && !isSeparateOnlyOpenClose) {\n      resetTemp();\n\n      if (isSeparateFirst) {\n        return out_i_2 = i, \"break\";\n      }\n\n      return out_i_2 = i, \"continue\";\n    }\n\n    if (nextIndex === -1) {\n      nextIndex = length - 1;\n    }\n\n    tempValues.push(texts.slice(i, nextIndex + 1).join(\"\"));\n    i = nextIndex;\n    out_i_2 = i;\n  };\n\n  var out_i_2;\n\n  for (var i = 0; i < length; ++i) {\n    var state_2 = _loop_2(i);\n\n    i = out_i_2;\n    if (state_2 === \"break\") break;\n  }\n\n  if (tempValues.length) {\n    values.push(tempValues.join(\"\"));\n  }\n\n  return values;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\n\nfunction splitSpace(text) {\n  // divide comma(space)\n  return splitText(text, \"\");\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  return splitText(text, \",\");\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\n\n\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\n\n\nfunction findIndex(arr, callback, defaultIndex) {\n  if (defaultIndex === void 0) {\n    defaultIndex = -1;\n  }\n\n  var length = arr.length;\n\n  for (var i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n\n  return defaultIndex;\n}\n/**\n* Returns the reverse direction index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLastIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findLastIndex } from \"@daybrush/utils\";\n\nfindLastIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\n\n\nfunction findLastIndex(arr, callback, defaultIndex) {\n  if (defaultIndex === void 0) {\n    defaultIndex = -1;\n  }\n\n  var length = arr.length;\n\n  for (var i = length - 1; i >= 0; --i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n\n  return defaultIndex;\n}\n/**\n* Returns the value of the reverse direction element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLast` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\n\n\nfunction findLast(arr, callback, defalutValue) {\n  var index = findLastIndex(arr, callback);\n  return index > -1 ? arr[index] : defalutValue;\n}\n/**\n* Returns the value of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `find` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\n\n\nfunction find(arr, callback, defalutValue) {\n  var index = findIndex(arr, callback);\n  return index > -1 ? arr[index] : defalutValue;\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\n\nvar requestAnimationFrame = /*#__PURE__*/function () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n/**\n* window.cancelAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {number} handle - the id obtained through requestAnimationFrame method\n* @return {void}\n* @example\nimport { requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\n\nconst id = requestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n\ncancelAnimationFrame(id);\n*/\n\n\nvar cancelAnimationFrame = /*#__PURE__*/function () {\n  var caf = IS_WINDOW && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.msCancelAnimationFrame);\n  return caf ? caf.bind(window) : function (handle) {\n    clearTimeout(handle);\n  };\n}();\n/**\n* @function\n* @memberof Utils\n*/\n\n\nfunction getKeys(obj) {\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n\n  var keys = [];\n\n  for (var name in keys) {\n    keys.push(name);\n  }\n\n  return keys;\n}\n/**\n* @function\n* @memberof Utils\n*/\n\n\nfunction sortOrders(keys, orders) {\n  if (orders === void 0) {\n    orders = [];\n  }\n\n  keys.sort(function (a, b) {\n    var index1 = orders.indexOf(a);\n    var index2 = orders.indexOf(b);\n\n    if (index2 === -1 && index1 === -1) {\n      return 0;\n    }\n\n    if (index1 === -1) {\n      return 1;\n    }\n\n    if (index2 === -1) {\n      return -1;\n    }\n\n    return index1 - index2;\n  });\n}\n/**\n* convert unit size to px size\n* @function\n* @memberof Utils\n*/\n\n\nfunction convertUnitSize(pos, size) {\n  var _a = splitUnit(pos),\n      value = _a.value,\n      unit = _a.unit;\n\n  if (isObject(size)) {\n    var sizeFunction = size[unit];\n\n    if (sizeFunction) {\n      if (isFunction(sizeFunction)) {\n        return sizeFunction(value);\n      } else if (DEFAULT_UNIT_PRESETS[unit]) {\n        return DEFAULT_UNIT_PRESETS[unit](value, sizeFunction);\n      }\n    }\n  } else if (unit === \"%\") {\n    return value * size / 100;\n  }\n\n  if (DEFAULT_UNIT_PRESETS[unit]) {\n    return DEFAULT_UNIT_PRESETS[unit](value);\n  }\n\n  return value;\n}\n/**\n* calculate between min, max\n* @function\n* @memberof Utils\n*/\n\n\nfunction between(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\nfunction checkBoundSize(targetSize, compareSize, isMax) {\n  return [[throttle(compareSize[0], TINY_NUM), throttle(compareSize[0] * targetSize[1] / targetSize[0], TINY_NUM)], [throttle(compareSize[1] * targetSize[0] / targetSize[1], TINY_NUM), throttle(compareSize[1], TINY_NUM)]].filter(function (size) {\n    return size.every(function (value, i) {\n      return isMax ? value <= compareSize[i] : value >= compareSize[i];\n    });\n  })[0] || targetSize;\n}\n/**\n* calculate bound size\n* @function\n* @memberof Utils\n*/\n\n\nfunction calculateBoundSize(size, minSize, maxSize, keepRatio) {\n  if (!keepRatio) {\n    return size.map(function (value, i) {\n      return between(value, minSize[i], maxSize[i]);\n    });\n  }\n\n  var width = size[0],\n      height = size[1]; // width : height = minWidth : minHeight;\n\n  var _a = checkBoundSize(size, minSize, false),\n      minWidth = _a[0],\n      minHeight = _a[1];\n\n  var _b = checkBoundSize(size, maxSize, true),\n      maxWidth = _b[0],\n      maxHeight = _b[1];\n\n  if (width < minWidth || height < minHeight) {\n    width = minWidth;\n    height = minHeight;\n  } else if (width > maxWidth || height > maxHeight) {\n    width = maxWidth;\n    height = maxHeight;\n  }\n\n  return [width, height];\n}\n/**\n* Add all the numbers.\n* @function\n* @memberof Utils\n*/\n\n\nfunction sum(nums) {\n  var length = nums.length;\n  var total = 0;\n\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n\n  return total;\n}\n/**\n* Average all numbers.\n* @function\n* @memberof Utils\n*/\n\n\nfunction average(nums) {\n  var length = nums.length;\n  var total = 0;\n\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n\n  return length ? total / length : 0;\n}\n/**\n* Get the angle of two points. (0 <= rad < 359)\n* @function\n* @memberof Utils\n*/\n\n\nfunction getRad(pos1, pos2) {\n  var distX = pos2[0] - pos1[0];\n  var distY = pos2[1] - pos1[1];\n  var rad = Math.atan2(distY, distX);\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n/**\n* Get the average point of all points.\n* @function\n* @memberof Utils\n*/\n\n\nfunction getCenterPoint(points) {\n  return [0, 1].map(function (i) {\n    return average(points.map(function (pos) {\n      return pos[i];\n    }));\n  });\n}\n/**\n* Gets the direction of the shape.\n* @function\n* @memberof Utils\n*/\n\n\nfunction getShapeDirection(points) {\n  var center = getCenterPoint(points);\n  var pos1Rad = getRad(center, points[0]);\n  var pos2Rad = getRad(center, points[1]);\n  return pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI || pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI ? 1 : -1;\n}\n/**\n* Get the distance between two points.\n* @function\n* @memberof Utils\n*/\n\n\nfunction getDist(a, b) {\n  return Math.sqrt(Math.pow((b ? b[0] : 0) - a[0], 2) + Math.pow((b ? b[1] : 0) - a[1], 2));\n}\n/**\n* throttle number depending on the unit.\n* @function\n* @memberof Utils\n*/\n\n\nfunction throttle(num, unit) {\n  if (!unit) {\n    return num;\n  }\n\n  return Math.round(num / unit) * unit;\n}\n/**\n* throttle number array depending on the unit.\n* @function\n* @memberof Utils\n*/\n\n\nfunction throttleArray(nums, unit) {\n  nums.forEach(function (_, i) {\n    nums[i] = throttle(nums[i], unit);\n  });\n  return nums;\n}\n/**\n* @function\n* @memberof Utils\n*/\n\n\nfunction counter(num) {\n  var nums = [];\n\n  for (var i = 0; i < num; ++i) {\n    nums.push(i);\n  }\n\n  return nums;\n}\n/**\n* @function\n* @memberof Utils\n*/\n\n\nfunction replaceOnce(text, fromText, toText) {\n  var isOnce = false;\n  return text.replace(fromText, function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isOnce) {\n      return args[0];\n    }\n\n    isOnce = true;\n    return isString(toText) ? toText : toText.apply(void 0, args);\n  });\n}\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\n\nfunction hslToRGBA(hsl) {\n  var _a;\n\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  return [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), (_a = hsl[3]) !== null && _a !== void 0 ? _a : 1];\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return undefined;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [0, 0, 0, 1];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return undefined;\n}\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\n\nfunction removeEvent(el, type, listener, options) {\n  el.removeEventListener(type, listener, options);\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, OPEN_CLOSED_CHARACTERS, TINY_NUM, DEFAULT_UNIT_PRESETS, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, dot, isUndefined, isObject, isArray, isString, isNumber, isFunction, splitText, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, findIndex, findLastIndex, findLast, find, requestAnimationFrame, cancelAnimationFrame, getKeys, sortOrders, convertUnitSize, between, checkBoundSize, calculateBoundSize, sum, average, getRad, getCenterPoint, getShapeDirection, getDist, throttle, throttleArray, counter, replaceOnce, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent };","map":{"version":3,"sources":["../src/consts.ts","../src/utils.ts","../src/color.ts","../src/dom.ts"],"names":["RGB","RGBA","HSL","HSLA","COLOR_MODELS","FUNCTION","PROPERTY","ARRAY","OBJECT","STRING","NUMBER","UNDEFINED","IS_WINDOW","doc","prefixes","getCrossBrowserProperty","styles","length","i","name","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","OPEN_CLOSED_CHARACTERS","open","close","TINY_NUM","DEFAULT_UNIT_PRESETS","pos","size","window","Math","dot","a1","a2","b1","b2","isUndefined","value","isObject","isArray","Array","isString","isNumber","isFunction","isCharacterSpace","character","isSeparatorSpace","separator","isIgnore","findIgnore","findClose","index","otherText","texts","closeCharacter","nextIndex","openCharacter","find","findOpen","splitText","text","splitOptions","_a","_b","isSeparateFirst","isSeparateOnlyOpenClose","_c","_d","openClosedText","regexText","regex","values","tempValues","resetTemp","isEqualSeparator","splitSpace","splitComma","splitBracket","matches","prefix","suffix","splitUnit","unit","NaN","parseFloat","camelize","str","letter","decamelize","letter2","toArray","now","Date","findIndex","arr","callback","defaultIndex","findLastIndex","findLast","defalutValue","requestAnimationFrame","firstTime","raf","currTime","id","cancelAnimationFrame","caf","clearTimeout","getKeys","obj","Object","keys","sortOrders","orders","index1","index2","convertUnitSize","sizeFunction","between","min","max","checkBoundSize","targetSize","compareSize","isMax","throttle","calculateBoundSize","minSize","maxSize","keepRatio","width","height","minWidth","minHeight","maxWidth","maxHeight","sum","nums","total","average","getRad","pos1","pos2","distX","distY","rad","getCenterPoint","points","getShapeDirection","center","pos1Rad","pos2Rad","getDist","a","b","num","throttleArray","counter","replaceOnce","fromText","toText","isOnce","args","cutHex","hex","hexToRGBA","h","r","parseInt","g","isNaN","toFullHex","hslToRGBA","hsl","s","l","c","x","m","rgb","stringToRGBA","color","colorArr","$","selectors","multi","document","hasClass","element","className","addClass","removeClass","reg","fromCSS","elements","properties","cssObject","addEvent","el","type","listener","options","removeEvent"],"mappings":"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","sourcesContent":["/**\n* @namespace\n* @name Consts\n*/\n\nimport { IObject, OpenCloseCharacter } from \"./types\";\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nexport const RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\nexport const RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\nexport const HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\nexport const HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\nexport const COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\nexport const FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\nexport const PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\nexport const ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\nexport const OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\nexport const STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\nexport const NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\nexport const UNDEFINED = \"undefined\";\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nexport const IS_WINDOW = typeof window !== UNDEFINED;\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nconst doc = (typeof document !== UNDEFINED && document) as Document; // FIXME: this type maybe false\n\nexport {doc as document};\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\n\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\nexport const getCrossBrowserProperty =  /*#__PURE__*/(property: string) => {\n  if (!doc) {\n    return \"\";\n  }\n  const styles = (doc.body || doc.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n  return \"\";\n};\n\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\nexport const TRANSFORM = /*#__PURE__*/getCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\nexport const FILTER = /*#__PURE__*/getCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\nexport const ANIMATION = /*#__PURE__*/getCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n\nexport const OPEN_CLOSED_CHARACTERS: OpenCloseCharacter[] = [\n  { open: \"(\", close: \")\" },\n  { open: `\"`, close: `\"`},\n  { open: `'`, close: `'`},\n  { open: `\\\\\"`, close: `\\\\\"`},\n  { open: `\\\\'`, close: `\\\\'`},\n];\nexport const TINY_NUM = 0.0000001;\nexport const DEFAULT_UNIT_PRESETS: IObject<(pos: number, size?: number) => number> = {\n  \"cm\": pos => pos * 96 / 2.54,\n  \"mm\": pos => pos * 96 / 254,\n  \"in\": pos => pos * 96,\n  \"pt\": pos => pos * 96 / 72,\n  \"pc\": pos => pos * 96 / 6,\n  \"%\": (pos, size) => pos * size! / 100,\n  \"vw\": (pos, size = window.innerWidth) => pos / 100 * size,\n  \"vh\": (pos, size = window.innerHeight) => pos / 100 * size,\n  \"vmax\": (pos, size = Math.max(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n  \"vmin\": (pos, size = Math.min(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n};\n","import {\n  UNDEFINED, STRING,\n  OBJECT, FUNCTION,\n  IS_WINDOW, OPEN_CLOSED_CHARACTERS, NUMBER,\n  DEFAULT_UNIT_PRESETS,\n  TINY_NUM\n} from \"./consts\";\nimport { IArrayFormat, IObject, OpenCloseCharacter, SplitOptions } from \"./types\";\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\nexport function dot(a1: number, a2: number, b1: number, b2: number) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === UNDEFINED);\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\nexport function isObject(value: any): value is IObject<any> {\n  return value && (typeof value === OBJECT);\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\nexport function isString(value: any): value is string {\n  return typeof value === STRING;\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === NUMBER;\n}\n\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === FUNCTION;\n}\nfunction isEqualSeparator(\n  character: string,\n  separator: string,\n) {\n  const isCharacterSpace = character === \"\" || character == \" \";\n  const isSeparatorSpace = separator === \"\" || separator == \" \";\n\n  return (isSeparatorSpace && isCharacterSpace) || character === separator;\n}\nfunction findOpen(\n  openCharacter: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n  length: number,\n  openCloseCharacters: OpenCloseCharacter[],\n) {\n  const isIgnore = findIgnore(openCharacter, texts, index);\n\n  if (!isIgnore) {\n    return findClose(openCharacter, texts, index + 1, length, openCloseCharacters);\n  }\n  return index;\n}\nfunction findIgnore(\n  character: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n) {\n  if (!character.ignore) {\n    return null;\n  }\n  const otherText = texts.slice(Math.max(index - 3, 0), index + 3).join(\"\");\n\n  return new RegExp(character.ignore).exec(otherText);\n\n}\nfunction findClose(\n  closeCharacter: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n  length: number,\n  openCloseCharacters: OpenCloseCharacter[],\n) {\n  for (let i = index; i < length; ++i) {\n    const character = texts[i].trim();\n\n    if (character === closeCharacter.close && !findIgnore(closeCharacter, texts, i)) {\n      return i;\n    }\n    let nextIndex = i;\n    // re open\n    const openCharacter = find(openCloseCharacters, ({ open }) => open === character);\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n    }\n    if (nextIndex === -1) {\n      break;\n    }\n    i = nextIndex;\n  }\n  return -1;\n}\n\nexport function splitText(\n  text: string,\n  splitOptions: string | SplitOptions,\n) {\n  const {\n    separator = \",\",\n    isSeparateFirst,\n    isSeparateOnlyOpenClose,\n    isSeparateOpenClose = isSeparateOnlyOpenClose,\n    openCloseCharacters = OPEN_CLOSED_CHARACTERS,\n  } = isString(splitOptions) ? {\n    separator: splitOptions,\n  } as SplitOptions : splitOptions;\n  const openClosedText = openCloseCharacters.map(({ open, close }) => {\n    if (open === close) {\n      return open;\n    }\n    return `${open}|${close}`;\n  }).join(\"|\");\n  const regexText = `(\\\\s*${separator}\\\\s*|${openClosedText}|\\\\s+)`;\n  const regex = new RegExp(regexText, \"g\");\n  const texts = text.split(regex).filter(Boolean);\n  const length = texts.length;\n  const values: string[] = [];\n  let tempValues: string[] = [];\n\n  function resetTemp() {\n    if (tempValues.length) {\n      values.push(tempValues.join(\"\"));\n      tempValues = [];\n\n      return true;\n    }\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    const character = texts[i].trim();\n    let nextIndex = i;\n\n\n    const openCharacter = find(openCloseCharacters, ({ open }) => open === character);\n    const closeCharacter = find(openCloseCharacters, ({ close }) => close === character);\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n\n      if (nextIndex !== -1 && isSeparateOpenClose) {\n        if (resetTemp() && isSeparateFirst) {\n          break;\n        }\n        values.push(texts.slice(i, nextIndex + 1).join(\"\"));\n        i = nextIndex;\n\n        if (isSeparateFirst) {\n          break;\n        }\n        continue;\n      }\n    } else if (closeCharacter && !findIgnore(closeCharacter, texts, i)) {\n      throw new Error(`invalid format: ${closeCharacter.close}`);\n    } else if (isEqualSeparator(character, separator) && !isSeparateOnlyOpenClose) {\n      resetTemp();\n      if (isSeparateFirst) {\n        break;\n      }\n      continue;\n    }\n\n    if (nextIndex === -1) {\n      nextIndex = length - 1;\n    }\n    tempValues.push(texts.slice(i, nextIndex + 1).join(\"\"));\n    i = nextIndex;\n  }\n  if (tempValues.length) {\n    values.push(tempValues.join(\"\"));\n  }\n  return values;\n}\n\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(space)\n  return splitText(text, \"\");\n}\n\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string): string[] {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  return splitText(text, \",\");\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\nexport function splitBracket(text: string) {\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return { prefix: matches[1], value: matches[2], suffix: matches[3] };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\nexport function splitUnit(text: string): { prefix: string, unit: string, value: number } {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\nexport function decamelize(str: string, separator: string = \"-\") {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}${separator}${letter2.toLowerCase()}`);\n}\n\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\nexport function toArray<T>(value: IArrayFormat<T>): T[] {\n  return [].slice.call(value);\n}\n\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\nexport function now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nexport function findIndex<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defaultIndex: number = -1,\n): number {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n\n/**\n* Returns the reverse direction index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLastIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findLastIndex } from \"@daybrush/utils\";\n\nfindLastIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nexport function findLastIndex<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defaultIndex: number = -1,\n): number {\n  const length = arr.length;\n\n  for (let i = length - 1; i >= 0; --i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n\n/**\n* Returns the value of the reverse direction element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLast` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nexport function findLast<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defalutValue?: T,\n): T | undefined {\n  const index = findLastIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\n/**\n* Returns the value of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `find` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nexport function find<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defalutValue?: T,\n): T | undefined {\n  const index = findIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\n\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\nexport const requestAnimationFrame = /*#__PURE__*/(() => {\n  const firstTime = now();\n  const raf = IS_WINDOW\n    && (window.requestAnimationFrame || window.webkitRequestAnimationFrame\n      || (window as any).mozRequestAnimationFrame || (window as any).msRequestAnimationFrame);\n\n  return raf ? (raf.bind(window) as (callback: FrameRequestCallback) => number) : ((callback: FrameRequestCallback) => {\n    const currTime = now();\n    const id = window.setTimeout(() => {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  });\n})();\n\n/**\n* window.cancelAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {number} handle - the id obtained through requestAnimationFrame method\n* @return {void}\n* @example\nimport { requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\n\nconst id = requestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n\ncancelAnimationFrame(id);\n*/\nexport const cancelAnimationFrame = /*#__PURE__*/(() => {\n  const caf = IS_WINDOW\n    && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame\n      || (window as any).mozCancelAnimationFrame || (window as any).msCancelAnimationFrame);\n\n  return caf\n    ? caf.bind(window) as (handle: number) => void\n    : ((handle: number) => { clearTimeout(handle); });\n})();\n/**\n* @function\n* @memberof Utils\n*/\nexport function getKeys(obj: IObject<any>): string[] {\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n  const keys: string[] = [];\n  for (const name in keys) {\n    keys.push(name);\n  }\n  return keys;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function sortOrders(keys: Array<string | number>, orders: Array<string | number> = []) {\n  keys.sort((a, b) => {\n    const index1 = orders.indexOf(a);\n    const index2 = orders.indexOf(b);\n\n    if (index2 === -1 && index1 === -1) {\n      return 0;\n    }\n    if (index1 === -1) {\n      return 1;\n    }\n    if (index2 === -1) {\n      return -1;\n    }\n    return index1 - index2;\n  });\n}\n\n/**\n* convert unit size to px size\n* @function\n* @memberof Utils\n*/\nexport function convertUnitSize(pos: string, size: number | IObject<((pos: number) => number) | number>) {\n  const { value, unit } = splitUnit(pos);\n\n  if (isObject(size)) {\n    const sizeFunction = size[unit];\n    if (sizeFunction) {\n      if (isFunction(sizeFunction)) {\n        return sizeFunction(value);\n      } else if (DEFAULT_UNIT_PRESETS[unit]) {\n        return DEFAULT_UNIT_PRESETS[unit](value, sizeFunction);\n      }\n    }\n  } else if (unit === \"%\") {\n    return value * size / 100;\n  }\n  if (DEFAULT_UNIT_PRESETS[unit]) {\n    return DEFAULT_UNIT_PRESETS[unit](value);\n  }\n  return value;\n}\n\n/**\n* calculate between min, max\n* @function\n* @memberof Utils\n*/\nexport function between(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(value, max));\n}\n\nexport function checkBoundSize(targetSize: number[], compareSize: number[], isMax: boolean) {\n  return [\n    [throttle(compareSize[0], TINY_NUM), throttle(compareSize[0] * targetSize[1] / targetSize[0], TINY_NUM)],\n    [throttle(compareSize[1] * targetSize[0] / targetSize[1], TINY_NUM), throttle(compareSize[1], TINY_NUM)],\n  ].filter(size => size.every((value, i) => {\n    return isMax ? value <= compareSize[i] : value >= compareSize[i];\n  }))[0] || targetSize;\n}\n\n/**\n* calculate bound size\n* @function\n* @memberof Utils\n*/\nexport function calculateBoundSize(\n  size: number[], minSize: number[],\n  maxSize: number[], keepRatio?: boolean,\n): number[] {\n  if (!keepRatio) {\n    return size.map((value, i) => between(value, minSize[i], maxSize[i]));\n  }\n  let [width, height] = size;\n  // width : height = minWidth : minHeight;\n  const [minWidth, minHeight] = checkBoundSize(size, minSize, false);\n  const [maxWidth, maxHeight] = checkBoundSize(size, maxSize, true);\n\n  if (width < minWidth || height < minHeight) {\n    width = minWidth;\n    height = minHeight;\n  } else if (width > maxWidth || height > maxHeight) {\n    width = maxWidth;\n    height = maxHeight;\n  }\n  return [width, height];\n}\n\n\n/**\n* Add all the numbers.\n* @function\n* @memberof Utils\n*/\nexport function sum(nums: number[]): number {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return total;\n}\n\n/**\n* Average all numbers.\n* @function\n* @memberof Utils\n*/\nexport function average(nums: number[]) {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return length ? total / length : 0;\n}\n/**\n* Get the angle of two points. (0 <= rad < 359)\n* @function\n* @memberof Utils\n*/\nexport function getRad(pos1: number[], pos2: number[]): number {\n  const distX = pos2[0] - pos1[0];\n  const distY = pos2[1] - pos1[1];\n  const rad = Math.atan2(distY, distX);\n\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n/**\n* Get the average point of all points.\n* @function\n* @memberof Utils\n*/\nexport function getCenterPoint(points: number[][]): number[] {\n  return [0, 1].map(i => average(points.map(pos => pos[i])));\n}\n/**\n* Gets the direction of the shape.\n* @function\n* @memberof Utils\n*/\nexport function getShapeDirection(points: number[][]): 1 | -1 {\n  const center = getCenterPoint(points);\n  const pos1Rad = getRad(center, points[0]);\n  const pos2Rad = getRad(center, points[1]);\n\n  return (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n    ? 1 : -1;\n}\n\n/**\n* Get the distance between two points.\n* @function\n* @memberof Utils\n*/\nexport function getDist(a: number[], b?: number[]) {\n  return Math.sqrt(Math.pow((b ? b[0] : 0) - a[0], 2) + Math.pow((b ? b[1] : 0) - a[1], 2));\n}\n\n/**\n* throttle number depending on the unit.\n* @function\n* @memberof Utils\n*/\nexport function throttle(num: number, unit?: number) {\n  if (!unit) {\n    return num;\n  }\n  return Math.round(num / unit) * unit;\n}\n\n/**\n* throttle number array depending on the unit.\n* @function\n* @memberof Utils\n*/\nexport function throttleArray(nums: number[], unit?: number) {\n  nums.forEach((_, i) => {\n    nums[i] = throttle(nums[i], unit);\n  });\n  return nums;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function counter(num: number): number[] {\n  const nums: number[] = [];\n\n  for (let i = 0; i < num; ++i) {\n    nums.push(i);\n  }\n\n  return nums;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function replaceOnce(text: string, fromText: RegExp | string, toText: string | ((...args: any[]) => string)): string {\n  let isOnce = false;\n  return text.replace(fromText, (...args: any[]) => {\n    if (isOnce) {\n      return args[0];\n    }\n    isOnce = true;\n    return isString(toText) ? toText : toText(...args);\n  });\n}\n","import { RGB, RGBA, HSL, HSLA } from \"./consts\";\nimport { splitBracket, splitComma } from \"./utils\";\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\nexport function hexToRGBA(hex: string): [number, number, number, number] {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\nexport function toFullHex(h: string): string {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const a = h.charAt(4);\n  const arr = [\"#\", r, r, g, g, b, b, a, a];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\nexport function hslToRGBA(hsl: readonly [number, number, number, number?]): [number, number, number, number] {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb: [number, number, number];\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  return [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n    hsl[3] ?? 1,\n  ];\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\nexport function stringToRGBA(color: string): [number, number, number, number] {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    const {prefix, value} = splitBracket(color);\n\n    if (!prefix || !value) {\n      return undefined as never;\n    }\n    const arr = splitComma(value);\n    const colorArr: [number, number, number, number] = [0, 0, 0, 1];\n    const length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (let i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n        return colorArr;\n      case HSL:\n      case HSLA:\n        for (let i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        }\n        // hsl, hsla to rgba\n        return hslToRGBA(colorArr);\n    }\n  }\n  return undefined as never;\n}\n","import { document } from \"./consts\";\nimport { IObject, IEventMap } from \"./types\";\n\n/**\n * @namespace DOM\n */\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi: true):\n  NodeListOf<HTMLElementTagNameMap[K]>;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi: true): NodeListOf<SVGElementTagNameMap[K]>;\nexport function $<E extends Element = Element>(selectors: string, multi: true): NodeListOf<E>;\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi?: false): HTMLElementTagNameMap[K] | null;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi?: false): SVGElementTagNameMap[K] | null;\nexport function $<E extends Element = Element>(selectors: string, multi?: false): E | null;\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\nexport function $<E extends Element = Element>(selectors: string, multi?: boolean): E | NodeListOf<E> | null {\n  return multi ? document.querySelectorAll<E>(selectors) : document.querySelector<E>(selectors);\n}\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nexport function hasClass(element: Element, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\nexport function addClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\nexport function removeClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\nexport function fromCSS(\n  elements: Element | Element[] | NodeListOf<Element>, properties: string[]): IObject<any> {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: IObject<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n\nexport function addEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\nexport function addEvent(\n  el: EventTarget,\n  type: string, listener: (e: Event) => void,\n  options?: boolean | AddEventListenerOptions) {\n  el.addEventListener(type, listener, options);\n}\n\nexport function removeEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void, options?: boolean | EventListenerOptions): void;\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\nexport function removeEvent(\n  el: EventTarget, type: string,\n  listener: (e: Event) => void,\n  options?: boolean | EventListenerOptions,\n) {\n  el.removeEventListener(type, listener, options);\n}\n"]},"metadata":{},"sourceType":"module"}