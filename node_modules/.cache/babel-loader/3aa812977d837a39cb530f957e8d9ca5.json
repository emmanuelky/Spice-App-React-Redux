{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions';\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCryptoMarket = () => {\n  _s();\n\n  const [lastPrice, setLastPrice] = useState(null);\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  const ws = new WebSocket('wss://stream.binance.com:9443/ws/btcusd@trade');\n\n  ws.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setLastPrice(cryptoPrice);\n  }; // console.log(lastPrice)\n\n\n  useEffect(() => {\n    dispatch(fetchAllCryptoMarket());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-300   \",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"overflow-x-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-300\",\n        children: lastPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), allCryptoMarket.map(crypto =>\n      /*#__PURE__*/\n      // <Link to={ }>\n      _jsxDEV(Row, {\n        onClick: () => dispatch(getSingleCryptoDetails(crypto.id)),\n        className: \"my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          className: \"\",\n          children: [\" \", crypto.market_cap_rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          className: \"text-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-10 h-10\",\n              src: crypto.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 71\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-evenly align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [crypto.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: crypto.symbol.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 137\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"$\", crypto.current_price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: crypto.price_change_percentage_24h > 0 ? 'text-red-600' : 'text-green-600',\n          children: [crypto.price_change_percentage_24h.toLocaleString(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"$\", crypto.market_cap.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"text-center\",\n          children: [\"$\", crypto.circulating_supply.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this) // </Link>\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllCryptoMarket, \"1cDZlRejsLX8enFRplW6ESWRDII=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllCryptoMarket;\nexport default AllCryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCryptoMarket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchAllCryptoMarket","getSingleCryptoDetails","Card","Button","Spinner","Container","Row","Col","Modal","AllCryptoMarket","lastPrice","setLastPrice","dispatch","allCryptoMarket","state","crypto","all_crypto_market","ws","WebSocket","onmessage","event","cryptoStock","JSON","parse","data","cryptoPrice","parseFloat","p","toLocaleString","map","id","market_cap_rank","image","name","symbol","toUpperCase","current_price","price_change_percentage_24h","market_cap","circulating_supply"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions'\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap'\n\n\nconst AllCryptoMarket = () => {\n\n    const [lastPrice, setLastPrice] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n\n    const ws = new WebSocket('wss://stream.binance.com:9443/ws/btcusd@trade')\n\n\n\n    ws.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setLastPrice(cryptoPrice)\n    }\n    // console.log(lastPrice)\n\n    useEffect(() => {\n        dispatch(fetchAllCryptoMarket())\n    }, [])\n\n\n\n\n    return (\n        <div className='text-gray-300   '>\n            <Container fluid className='overflow-x-auto'>\n\n                <div className='text-gray-300'>{lastPrice}</div>\n\n                {\n                    allCryptoMarket.map(crypto => (\n                        // <Link to={ }>\n\n                        <Row onClick={() => dispatch(getSingleCryptoDetails(crypto.id))} className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                            <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n                            <Col md={1} className='text-center'> <div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div></Col>\n\n                            <Col md={2}  ><div className=\"flex justify-evenly align-items-center\"><div className=''>{crypto.name} </div><span className='text-gray-500'>{crypto.symbol.toUpperCase()}</span></div></Col>\n\n                            <Col md={2} className='text-center'>${crypto.current_price.toLocaleString()}</Col>\n\n                            <Col md={2} className={crypto.price_change_percentage_24h > 0 ? 'text-red-600' : 'text-green-600'}>{crypto.price_change_percentage_24h.toLocaleString()}%</Col>\n\n                            <Col md={2} className='text-center'>${crypto.market_cap.toLocaleString()}</Col>\n\n                            <Col md={2} className='text-center'>${crypto.circulating_supply.toLocaleString()}</Col>\n\n                        </Row>\n                        // </Link>\n                    ))\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default AllCryptoMarket\n"]},"metadata":{},"sourceType":"module"}