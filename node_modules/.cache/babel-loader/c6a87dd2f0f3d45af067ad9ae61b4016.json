{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovies } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieList = () => {\n  _s();\n\n  var _allMovies$data$resul;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  const allMovies = useSelector(state => state.movies.movies);\n  console.log(allMovies.data);\n  const IMG_URL = 'https://image.tmdb.org/t/p/original';\n\n  const shortTitle = title => {\n    return title.slice(0, 20);\n  };\n\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center\",\n      children: (_allMovies$data$resul = allMovies.data.results) === null || _allMovies$data$resul === void 0 ? void 0 : _allMovies$data$resul.slice(0, 200).map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-40 h-40 mx-4 my-2  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          className: \"img-fluid\",\n          src: IMG_URL + movie.backdrop_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: shortTitle(movie.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShow,\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Woohoo, you're reading this text in a modal!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(MovieList, \"yGpRyXlGrR2fHPLIaFkLqw6YfPk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/MovieList.jsx"],"names":["React","useEffect","useState","Card","Button","useSelector","useDispatch","fetchMovies","MovieList","show","setShow","handleClose","handleShow","dispatch","allMovies","state","movies","console","log","data","IMG_URL","shortTitle","title","slice","results","map","movie","backdrop_path","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMovies } from '../redux/actions'\n\n\nconst MovieList = () => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n\n    const dispatch = useDispatch()\n    const allMovies = useSelector(state => state.movies.movies)\n    console.log(allMovies.data)\n    const IMG_URL = 'https://image.tmdb.org/t/p/original'\n\n\n\n    const shortTitle = (title) => {\n        return title.slice(0, 20)\n    }\n\n\n    useEffect(() => {\n        dispatch(fetchMovies())\n    }, [])\n\n    return (\n        <>\n            <div className=\"flex flex-wrap justify-center\" >\n                {\n                    allMovies.data.results?.slice(0, 200).map((movie) =>\n                    (<Card key={movie.id} className='w-40 h-40 mx-4 my-2  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full' >\n                        <Card.Img variant=\"top\" className=\"img-fluid\" src={IMG_URL + movie.backdrop_path} />\n                        <Card.Body>\n                            <span >{shortTitle(movie.title)}</span>\n                            <Card.Text>\n\n                            </Card.Text>\n\n                        </Card.Body>\n                    </Card>)\n                    )\n                }\n            </div>\n\n\n            {/* // Movie Details Modal */}\n            <>\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Launch demo modal\n                </Button>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n\n        </>\n    )\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}