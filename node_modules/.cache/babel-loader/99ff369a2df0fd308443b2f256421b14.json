{"ast":null,"code":"import axios from 'axios';\n\nrequire('dotenv').config();\n\nexport const fetchPosts = () => {\n  return async (dispatch, getState) => {\n    const posts = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/`);\n    const postsArray = posts.data;\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: postsArray\n    });\n  };\n};\nexport const addPosts = post => {\n  return async (dispatch, getState) => {\n    const posts = await axios.post(`${process.env.REACT_APP_BASE_URL}/posts/`, post); // const postsArray = posts.data\n\n    dispatch({\n      type: 'ADD_POST',\n      payload: posts\n    });\n  };\n};\nexport const fetchUsers = () => {\n  return async (dispatch, getState) => {\n    const users = await axios.get(`${process.env.REACT_APP_BASE_URL}/users/`);\n    const usersArray = users.data; // console.log(usersArray)\n\n    dispatch({\n      type: 'FETCH_USERS',\n      payload: usersArray\n    });\n  };\n};\nexport const addUser = user => {\n  return async (dispatch, getState) => {\n    const users = await axios.post(`${process.env.REACT_APP_BASE_URL}/users/`, user);\n    dispatch({\n      type: 'ADD_USER',\n      payload: users\n    });\n  };\n};\nexport const currentUser = newuser => {\n  return async (dispatch, getState) => {\n    const user = await axios.post(`${process.env.REACT_APP_BASE_URL}/currentUser/`, newuser);\n    dispatch({\n      type: 'POST_CURRENT_USER',\n      payload: user\n    });\n  };\n};\nexport const getCurrentUser = () => {\n  return async (dispatch, getState) => {\n    const currentUser = await axios.get(`${process.env.REACT_APP_BASE_URL}/currentUser`);\n    const loggedInCurrentUser = currentUser.data;\n    dispatch({\n      type: 'GET_CURRENT_USER',\n      payload: loggedInCurrentUser\n    });\n  };\n};\nexport const addLikes = likes => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'ADD_LIKES',\n      payload: likes\n    });\n  };\n};\nexport const removeLikes = likes => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'REMOVE_LIKES',\n      payload: likes\n    });\n  };\n};\nconst POPULAR_MOVIE_BASE_URL = 'https://api.themoviedb.org/3' + '/discover/movie?sort_by=popularity.desc&' + process.env.REACT_APP_MOVIE_API_KEY;\nconst Search_URL = 'https://api.themoviedb.org/3/search/movie?' + process.env.REACT_APP_MOVIE_API_KEY + '&query=';\nconst upcomingMovie_URL = 'https://api.themoviedb.org/3/movie/upcoming?' + process.env.REACT_APP_MOVIE_API_KEY + '&language=en-US&page=1'; // console.log()\n\nexport const fetchMovies = query => {\n  return async (dispatch, getState) => {\n    const movies = await axios.get(query ? Search_URL + query : POPULAR_MOVIE_BASE_URL);\n    const allMovies = movies.data.results;\n    console.log(allMovies);\n    dispatch({\n      type: 'FETCH_MOVIES',\n      payload: allMovies\n    });\n  };\n}; // Movie Detail\n\nconst movie_api = process.env.REACT_APP_MOVIE_API_KEY;\nconst movieDetail_URL = 'https://api.themoviedb.org/3/movie/';\nexport const getMovieDetails = id => {\n  return async (dispatch, getState) => {\n    const movieDetail = await axios.get(movieDetail_URL + id + '?' + process.env.REACT_APP_MOVIE_API_KEY);\n    const movieCasts = await axios.get(movieDetail_URL + id + '/credits?' + process.env.REACT_APP_MOVIE_API_KEY);\n    axios.all([movieDetail, movieCasts]).then(axios.spread((...responses) => {\n      // console.log(responses)\n      dispatch({\n        type: 'GET_MOVIE_DETAILS',\n        payload: responses\n      });\n    })).catch(errors => {});\n  };\n};","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/redux/actions/index.jsx"],"names":["axios","require","config","fetchPosts","dispatch","getState","posts","get","process","env","REACT_APP_BASE_URL","postsArray","data","type","payload","addPosts","post","fetchUsers","users","usersArray","addUser","user","currentUser","newuser","getCurrentUser","loggedInCurrentUser","addLikes","likes","removeLikes","POPULAR_MOVIE_BASE_URL","REACT_APP_MOVIE_API_KEY","Search_URL","upcomingMovie_URL","fetchMovies","query","movies","allMovies","results","console","log","movie_api","movieDetail_URL","getMovieDetails","id","movieDetail","movieCasts","all","then","spread","responses","catch","errors"],"mappings":"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","sourcesContent":["import axios from 'axios'\nrequire('dotenv').config()\n\nexport const fetchPosts = () => {\n    return async (dispatch, getState) => {\n        const posts = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/`)\n        const postsArray = posts.data\n        dispatch({\n            type: 'FETCH_POSTS',\n            payload: postsArray,\n        })\n\n    }\n}\n\n\nexport const addPosts = (post) => {\n    return async (dispatch, getState) => {\n\n        const posts = await axios.post(`${process.env.REACT_APP_BASE_URL}/posts/`, post)\n        // const postsArray = posts.data\n        dispatch({\n            type: 'ADD_POST',\n            payload: posts\n        })\n    }\n}\n\n\n\n\nexport const fetchUsers = () => {\n    return async (dispatch, getState) => {\n        const users = await axios.get(`${process.env.REACT_APP_BASE_URL}/users/`)\n        const usersArray = users.data\n        // console.log(usersArray)\n        dispatch({\n            type: 'FETCH_USERS',\n            payload: usersArray,\n        })\n\n    }\n}\n\n\n\n\nexport const addUser = (user) => {\n    return async (dispatch, getState) => {\n\n        const users = await axios.post(`${process.env.REACT_APP_BASE_URL}/users/`, user)\n\n        dispatch({\n            type: 'ADD_USER',\n            payload: users\n        })\n    }\n}\n\n\n\n\n\nexport const currentUser = (newuser) => {\n    return async (dispatch, getState) => {\n        const user = await axios.post(`${process.env.REACT_APP_BASE_URL}/currentUser/`, newuser)\n\n        dispatch({\n            type: 'POST_CURRENT_USER',\n            payload: user,\n        })\n\n    }\n}\n\n\nexport const getCurrentUser = () => {\n    return async (dispatch, getState) => {\n        const currentUser = await axios.get(`${process.env.REACT_APP_BASE_URL}/currentUser`)\n        const loggedInCurrentUser = currentUser.data\n        dispatch({\n            type: 'GET_CURRENT_USER',\n            payload: loggedInCurrentUser,\n        })\n    }\n}\n\nexport const addLikes = (likes) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'ADD_LIKES',\n            payload: likes\n        })\n    }\n}\n\n\nexport const removeLikes = (likes) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'REMOVE_LIKES',\n            payload: likes\n        })\n    }\n}\n\n\nconst POPULAR_MOVIE_BASE_URL = 'https://api.themoviedb.org/3' + '/discover/movie?sort_by=popularity.desc&' + process.env.REACT_APP_MOVIE_API_KEY\nconst Search_URL = 'https://api.themoviedb.org/3/search/movie?' + process.env.REACT_APP_MOVIE_API_KEY + '&query='\nconst upcomingMovie_URL = 'https://api.themoviedb.org/3/movie/upcoming?' + process.env.REACT_APP_MOVIE_API_KEY + '&language=en-US&page=1'\n\n// console.log()\n\nexport const fetchMovies = (query) => {\n    return async (dispatch, getState) => {\n        const movies = await axios.get(query ? Search_URL + query : POPULAR_MOVIE_BASE_URL)\n        const allMovies = movies.data.results\n        console.log(allMovies)\n        dispatch({\n            type: 'FETCH_MOVIES',\n            payload: allMovies,\n        })\n    }\n}\n\n// Movie Detail\nconst movie_api = process.env.REACT_APP_MOVIE_API_KEY\nconst movieDetail_URL = 'https://api.themoviedb.org/3/movie/'\n\n\n\n\nexport const getMovieDetails = (id) => {\n    return async (dispatch, getState) => {\n        const movieDetail = await axios.get(movieDetail_URL + id + '?' + process.env.REACT_APP_MOVIE_API_KEY)\n        const movieCasts = await axios.get(movieDetail_URL + id + '/credits?' + process.env.REACT_APP_MOVIE_API_KEY)\n\n        axios.all([movieDetail, movieCasts]).then(axios.spread((...responses) => {\n            // console.log(responses)\n\n            dispatch({\n                type: 'GET_MOVIE_DETAILS',\n                payload: responses\n            })\n        })).catch(errors => {\n\n        })\n\n\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}