{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/LiveCryptoWebSocket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveCryptoWebSocket = () => {\n  _s();\n\n  const allCrypto = useSelector(state => state.crypto.all_crypto_market);\n  console.log(allCrypto);\n  const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\");\n  const [btcPrice, setBTCPrice] = useState(null); // const [btcLastPrice, setBTCLastPrice] = useState(null)\n\n  const [ethPrice, setETHPrice] = useState(null);\n  const [bnbPrice, setBNBPrice] = useState(null);\n  const [adaPrice, setADAPrice] = useState(null);\n  const [xrpPrice, setXRPPrice] = useState(null);\n  const [solPrice, setSOLPrice] = useState(null); // const [lastPrice, setLastPrice] = useState(null)\n\n  const btc = new WebSocket('wss://stream.binance.com:9443/ws/btceur@trade');\n\n  btc.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setBTCPrice(cryptoPrice);\n  };\n\n  const eth = new WebSocket('wss://stream.binance.com:9443/ws/etheur@trade');\n\n  eth.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setETHPrice(cryptoPrice);\n  };\n\n  const bnb = new WebSocket('wss://stream.binance.com:9443/ws/bnbeur@trade');\n\n  bnb.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setBNBPrice(cryptoPrice);\n  };\n\n  const ada = new WebSocket('wss://stream.binance.com:9443/ws/adaeur@trade');\n\n  ada.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setADAPrice(cryptoPrice);\n  };\n\n  const xrp = new WebSocket('wss://stream.binance.com:9443/ws/xrpeur@trade');\n\n  xrp.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setXRPPrice(cryptoPrice);\n  };\n\n  const sol = new WebSocket('wss://stream.binance.com:9443/ws/soleur@trade');\n\n  sol.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setSOLPrice(cryptoPrice);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-200 my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"BTC \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: !btcPrice ? \"text-green-500\" : \"text-red-500\",\n            children: btcPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"ETH \", ethPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"BNB \", bnbPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"ADA \", adaPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"XRP \", xrpPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"SOLANA \", solPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LiveCryptoWebSocket, \"0ha/RfUq6H+EdBrLMW5BH/fqY9s=\", false, function () {\n  return [useSelector];\n});\n\n_c = LiveCryptoWebSocket;\nexport default LiveCryptoWebSocket;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveCryptoWebSocket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/LiveCryptoWebSocket.jsx"],"names":["React","useEffect","useState","Container","Row","Col","useSelector","useDispatch","LiveCryptoWebSocket","allCrypto","state","crypto","all_crypto_market","console","log","btcLastPrice","find","id","btcPrice","setBTCPrice","ethPrice","setETHPrice","bnbPrice","setBNBPrice","adaPrice","setADAPrice","xrpPrice","setXRPPrice","solPrice","setSOLPrice","btc","WebSocket","onmessage","event","cryptoStock","JSON","parse","data","cryptoPrice","parseFloat","p","toLocaleString","eth","bnb","ada","xrp","sol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst LiveCryptoWebSocket = () => {\n\n\n    const allCrypto = useSelector(state => state.crypto.all_crypto_market)\n    console.log(allCrypto)\n    const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\")\n\n    const [btcPrice, setBTCPrice] = useState(null)\n    // const [btcLastPrice, setBTCLastPrice] = useState(null)\n\n    const [ethPrice, setETHPrice] = useState(null)\n    const [bnbPrice, setBNBPrice] = useState(null)\n    const [adaPrice, setADAPrice] = useState(null)\n    const [xrpPrice, setXRPPrice] = useState(null)\n    const [solPrice, setSOLPrice] = useState(null)\n\n    // const [lastPrice, setLastPrice] = useState(null)\n\n    const btc = new WebSocket('wss://stream.binance.com:9443/ws/btceur@trade')\n    btc.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n\n        setBTCPrice(cryptoPrice)\n\n    }\n\n\n\n    const eth = new WebSocket('wss://stream.binance.com:9443/ws/etheur@trade')\n    eth.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setETHPrice(cryptoPrice)\n    }\n\n    const bnb = new WebSocket('wss://stream.binance.com:9443/ws/bnbeur@trade')\n    bnb.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setBNBPrice(cryptoPrice)\n    }\n\n    const ada = new WebSocket('wss://stream.binance.com:9443/ws/adaeur@trade')\n    ada.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setADAPrice(cryptoPrice)\n    }\n\n    const xrp = new WebSocket('wss://stream.binance.com:9443/ws/xrpeur@trade')\n    xrp.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setXRPPrice(cryptoPrice)\n    }\n\n    const sol = new WebSocket('wss://stream.binance.com:9443/ws/soleur@trade')\n    sol.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setSOLPrice(cryptoPrice)\n    }\n\n\n\n    useEffect(() => {\n\n\n    }, [])\n\n\n\n\n    return (\n        <div className='text-gray-200 my-5'>\n            <Row>\n                <Col md={2}>\n                    <div className='text-gray-200'>BTC <div className={!btcPrice ? \"text-green-500\" : \"text-red-500\"}>{btcPrice}</div></div>\n                </Col>\n                <Col md={2}>\n                    <div className='text-gray-200'>ETH {ethPrice}</div>\n\n                </Col>\n                <Col md={2}>\n                    <div className='text-gray-200'>BNB {bnbPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>ADA {adaPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>XRP {xrpPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>SOLANA {solPrice}</div>\n\n                </Col><Col md={2}>\n\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default LiveCryptoWebSocket\n"]},"metadata":{},"sourceType":"module"}