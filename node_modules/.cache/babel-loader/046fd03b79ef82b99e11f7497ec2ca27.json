{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/AllCryptoMarket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions';\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap';\nimport moment from 'moment';\nimport CryptoSearch from './CryptoSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllCryptoMarket = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  const singleCrypto = useSelector(state => state.crypto.single_crypto_detail);\n  console.log(singleCrypto);\n  const dateTimeAgo = moment().fromNow();\n  console.log(dateTimeAgo);\n  useEffect(() => {\n    dispatch(fetchAllCryptoMarket());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-300   \",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"overflow-x-auto\",\n        children: singleCrypto.length === 0 ? allCryptoMarket === null || allCryptoMarket === void 0 ? void 0 : allCryptoMarket.map(crypto =>\n        /*#__PURE__*/\n        // <Link to={ }>\n        _jsxDEV(Row, {\n          onClick: () => dispatch(getSingleCryptoDetails(crypto.id)),\n          className: \"my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            className: \"\",\n            children: [\" \", crypto.market_cap_rank]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            className: \"text-center\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"w-10 h-10\",\n                src: crypto.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 75\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-evenly align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: [crypto.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 103\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500\",\n                children: crypto.symbol.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 141\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.current_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600',\n            children: [crypto.price_change_percentage_24h.toLocaleString(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.market_cap.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.total_volume.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this) // </Link>\n        ) : singleCrypto === null || singleCrypto === void 0 ? void 0 : singleCrypto.map(crypto =>\n        /*#__PURE__*/\n        // <Link to={ }>\n        _jsxDEV(Row, {\n          onClick: () => dispatch(getSingleCryptoDetails(crypto.id)),\n          className: \"my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            className: \"\",\n            children: [\" \", crypto.market_cap_rank]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            className: \"text-center\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"w-10 h-10\",\n                src: crypto.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 75\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-evenly align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: [crypto.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 103\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500\",\n                children: crypto.symbol.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 141\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.current_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600',\n            children: [crypto.price_change_percentage_24h.toLocaleString(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.market_cap.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            className: \"text-center\",\n            children: [\"\\u20AC\", crypto.total_volume.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this) // </Link>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AllCryptoMarket, \"m4H+KTbHozjYfBRUsp/kk7fkUfI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AllCryptoMarket;\nexport default AllCryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCryptoMarket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/AllCryptoMarket.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchAllCryptoMarket","getSingleCryptoDetails","Card","Button","Spinner","Container","Row","Col","Modal","moment","CryptoSearch","AllCryptoMarket","dispatch","allCryptoMarket","state","crypto","all_crypto_market","singleCrypto","single_crypto_detail","console","log","dateTimeAgo","fromNow","length","map","id","market_cap_rank","image","name","symbol","toUpperCase","current_price","price_change_percentage_24h","toLocaleString","market_cap","total_volume"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions'\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap'\nimport moment from 'moment'\nimport CryptoSearch from './CryptoSearch'\n\n\n\nconst AllCryptoMarket = () => {\n\n\n\n    const dispatch = useDispatch()\n\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n    const singleCrypto = useSelector(state => state.crypto.single_crypto_detail)\n    console.log(singleCrypto)\n\n    const dateTimeAgo = moment().fromNow();\n    console.log(dateTimeAgo);\n\n\n    useEffect(() => {\n        dispatch(fetchAllCryptoMarket())\n\n    }, [])\n\n\n\n\n    return (<>\n        <div className='text-gray-300   '>\n            <Container fluid className='overflow-x-auto'>\n\n\n                {\n                    singleCrypto.length === 0\n\n                        ? (allCryptoMarket?.map(crypto => (\n                            // <Link to={ }>\n\n                            <Row onClick={() => dispatch(getSingleCryptoDetails(crypto.id))} className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                                <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n                                <Col md={1} className='text-center'> <div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div></Col>\n\n                                <Col md={2}  ><div className=\"flex justify-evenly align-items-center\"><div className=''>{crypto.name} </div><span className='text-gray-500'>{crypto.symbol.toUpperCase()}</span></div></Col>\n\n                                <Col md={2} className='text-center'>€{crypto.current_price}</Col>\n\n                                <Col md={2} className={crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600'}>{crypto.price_change_percentage_24h.toLocaleString()}%</Col>\n\n                                <Col md={2} className='text-center'>€{crypto.market_cap.toLocaleString()}</Col>\n\n                                <Col md={2} className='text-center'>€{crypto.total_volume.toLocaleString()}</Col>\n\n                            </Row>\n                            // </Link>\n                        )))\n\n                        :\n                        (singleCrypto?.map(crypto => (\n                            // <Link to={ }>\n\n                            <Row onClick={() => dispatch(getSingleCryptoDetails(crypto.id))} className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                                <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n                                <Col md={1} className='text-center'> <div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div></Col>\n\n                                <Col md={2}  ><div className=\"flex justify-evenly align-items-center\"><div className=''>{crypto.name} </div><span className='text-gray-500'>{crypto.symbol.toUpperCase()}</span></div></Col>\n\n                                <Col md={2} className='text-center'>€{crypto.current_price}</Col>\n\n                                <Col md={2} className={crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600'}>{crypto.price_change_percentage_24h.toLocaleString()}%</Col>\n\n                                <Col md={2} className='text-center'>€{crypto.market_cap.toLocaleString()}</Col>\n\n                                <Col md={2} className='text-center'>€{crypto.total_volume.toLocaleString()}</Col>\n\n                            </Row>\n                            // </Link>\n                        )))\n                }\n            </Container>\n        </div>\n    </>)\n}\n\nexport default AllCryptoMarket\n"]},"metadata":{},"sourceType":"module"}