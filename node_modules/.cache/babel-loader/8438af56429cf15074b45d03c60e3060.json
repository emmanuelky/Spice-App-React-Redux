{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions';\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCryptoMarket = () => {\n  _s();\n\n  const [priceChangeColor, setPriceChangeColor] = useState(false);\n  const dispatch = useDispatch();\n  const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market);\n  const singleCryptoDetail = useSelector(state => state.crypto.single_crypto_detail); // const cryptoPriceChange = allCryptoMarket?.map(cryptoprice => cryptoprice.current_price)\n  // console.log(cryptoPriceChange)\n  // const addColorToPriceChange = cryptoPriceChange.forEach(priceChange => priceChange)\n  // console.log(addColorToPriceChange)\n  // useEffect(() => {\n  //     dispatch(fetchAllCryptoMarket())\n  // }, [cryptoPriceChange])\n\n  useEffect(() => {\n    dispatch(fetchAllCryptoMarket());\n  }, []);\n\n  const symbolToUpperCase = symbol => symbol.toUpperCase();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-300   \",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"overflow-x-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllCryptoMarket, \"r2RoiBQv1rYUwj+s4ARpRa73cRU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AllCryptoMarket;\nexport default AllCryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCryptoMarket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Crypto/AllCryptoMarket.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchAllCryptoMarket","getSingleCryptoDetails","Card","Button","Spinner","Container","Row","Col","Modal","AllCryptoMarket","priceChangeColor","setPriceChangeColor","dispatch","allCryptoMarket","state","crypto","all_crypto_market","singleCryptoDetail","single_crypto_detail","symbolToUpperCase","symbol","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,qBAA7D;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,SAAhC,EAA2CC,GAA3C,EAAgDC,GAAhD,EAAqDC,KAArD,QAAkE,iBAAlE;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,eAAe,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,iBAAvB,CAAnC;AACA,QAAMC,kBAAkB,GAAGnB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaG,oBAAvB,CAAtC,CAP0B,CAS1B;AAEA;AAEA;AACA;AAEA;AACA;AAEA;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMmB,iBAAiB,GAAIC,MAAD,IAAYA,MAAM,CAACC,WAAP,EAAtC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA7DD;;GAAMZ,e;UAIeV,W,EAEOD,W,EACGA,W;;;KAPzBW,e;AA+DN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAllCryptoMarket, getSingleCryptoDetails } from '../../redux/actions'\nimport { Card, Button, Spinner, Container, Row, Col, Modal } from 'react-bootstrap'\n\n\nconst AllCryptoMarket = () => {\n\n    const [priceChangeColor, setPriceChangeColor] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const allCryptoMarket = useSelector(state => state.crypto.all_crypto_market)\n    const singleCryptoDetail = useSelector(state => state.crypto.single_crypto_detail)\n\n    // const cryptoPriceChange = allCryptoMarket?.map(cryptoprice => cryptoprice.current_price)\n\n    // console.log(cryptoPriceChange)\n\n    // const addColorToPriceChange = cryptoPriceChange.forEach(priceChange => priceChange)\n    // console.log(addColorToPriceChange)\n\n    // useEffect(() => {\n    //     dispatch(fetchAllCryptoMarket())\n\n    // }, [cryptoPriceChange])\n\n\n\n    useEffect(() => {\n        dispatch(fetchAllCryptoMarket())\n    }, [])\n\n\n    const symbolToUpperCase = (symbol) => symbol.toUpperCase()\n\n    return (\n        <div className='text-gray-300   '>\n            <Container fluid className='overflow-x-auto'>\n\n                {/* {\n                    allCryptoMarket?.map(crypto => (\n                        // <Link to={ }>\n\n                        <Row onClick={() => dispatch(getSingleCryptoDetails(crypto.id))} className='my-5 align-items-center border-b border-gray-800 hover:border-gray-500 hover:bg-gray-700 hover:text-gray-200 rounded-lg p-1'>\n\n                            <Col md={1} className=''> {crypto.market_cap_rank}</Col>\n\n                            <Col md={1} className='text-center'> <div><img className=\"w-10 h-10\" src={crypto.image} alt=\"\" /> </div></Col>\n\n                            <Col md={2}  ><div className=\"flex justify-evenly align-items-center\"><div className=''>{crypto.name} </div><span className='text-gray-500'>{crypto.symbol.toUpperCase()}</span></div></Col>\n\n                            <Col md={2} className='text-center'>${crypto.current_price.toLocaleString()}</Col>\n\n                            <Col md={2} className={crypto.price_change_percentage_24h > 0 ? 'text-green-600' : 'text-red-600'}>{crypto.price_change_percentage_24h.toLocaleString()}%</Col>\n\n                            <Col md={2} className='text-center'>${crypto.market_cap.toLocaleString()}</Col>\n\n                            <Col md={2} className='text-center'>${crypto.total_volume.toLocaleString()}</Col>\n\n                        </Row>\n                        // </Link>\n                    ))\n                } */}\n            </Container>\n        </div>\n    )\n}\n\nexport default AllCryptoMarket\n"]},"metadata":{},"sourceType":"module"}