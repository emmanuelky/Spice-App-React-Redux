{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { postsReducer } from '../reducers/postReducer';\nimport { usersReducer } from '../reducers/userReducer';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'; // import { encryptTransform } from 'redux-persist-transform-encrypt'\n\nimport storage from 'redux-persist/lib/storage';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nexport const initialState = {\n  posts: {\n    posts: []\n  },\n  users: {\n    users: [],\n    loggedin: true,\n    currentUser: [],\n    likes: []\n  }\n};\nconst persistConfig = {\n  key: 'root',\n  storage // transforms: [\n  //     encryptTransform({\n  //         secretKey: process.env.REACT_APP_ENCRYPT_KEY,\n  //     }),\n  // ],\n\n};\nconst allReducers = combineReducers({\n  posts: postsReducer,\n  users: usersReducer\n});\nconst persistAllReducers = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistAllReducers, initialState, process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/redux/store/index.jsx"],"names":["createStore","applyMiddleware","combineReducers","compose","postsReducer","usersReducer","thunk","persistStore","persistReducer","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","posts","users","loggedin","currentUser","likes","persistConfig","key","allReducers","persistAllReducers","store","process","env","REACT_APP_DEVELOPMENT","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE;AADJ,GADiB;AAIxBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,WAAW,EAAE,EAHV;AAIHC,IAAAA,KAAK,EAAE;AAJJ;AAJiB,CAArB;AAcP,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBX,EAAAA,OAFkB,CAGlB;AACA;AACA;AACA;AACA;;AAPkB,CAAtB;AAWA,MAAMY,WAAW,GAAGnB,eAAe,CAAC;AAChCY,EAAAA,KAAK,EAAEV,YADyB;AAEhCW,EAAAA,KAAK,EAAEV;AAFyB,CAAD,CAAnC;AAKA,MAAMiB,kBAAkB,GAAGd,cAAc,CACrCW,aADqC,EACtBE,WADsB,CAAzC;AAIA,OAAO,MAAME,KAAK,GAAGvB,WAAW,CAACsB,kBAAD,EAC5BT,YAD4B,EAE5BW,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoChB,gBAAgB,CAACT,eAAe,CAACK,KAAD,CAAhB,CAApD,GAA+EH,OAAO,CAACF,eAAe,CAACK,KAAD,CAAhB,CAF1D,CAAzB;AAIP,OAAO,MAAMqB,SAAS,GAAGpB,YAAY,CAACgB,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { postsReducer } from '../reducers/postReducer'\nimport { usersReducer } from '../reducers/userReducer'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\n// import { encryptTransform } from 'redux-persist-transform-encrypt'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\nexport const initialState = {\n    posts: {\n        posts: [],\n    },\n    users: {\n        users: [],\n        loggedin: true,\n        currentUser: [],\n        likes: [],\n    },\n}\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    // transforms: [\n    //     encryptTransform({\n    //         secretKey: process.env.REACT_APP_ENCRYPT_KEY,\n    //     }),\n    // ],\n}\n\n\nconst allReducers = combineReducers({\n    posts: postsReducer,\n    users: usersReducer,\n})\n\nconst persistAllReducers = persistReducer(\n    persistConfig, allReducers\n)\n\nexport const store = createStore(persistAllReducers,\n    initialState,\n    process.env.REACT_APP_DEVELOPMENT ? composeEnhancers(applyMiddleware(thunk)) : compose(applyMiddleware(thunk)))\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}