{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/LiveCryptoWebSocket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveCryptoWebSocket = () => {\n  _s();\n\n  const [btcPrice, setBTCPrice] = useState(null); // const [btcLastPrice, setBTCLastPrice] = useState(null)\n\n  const [ethPrice, setETHPrice] = useState(null);\n  const [bnbPrice, setBNBPrice] = useState(null);\n  const [adaPrice, setADAPrice] = useState(null);\n  const [xrpPrice, setXRPPrice] = useState(null);\n  const [solPrice, setSOLPrice] = useState(null);\n  const allCrypto = useSelector(state => state.crypto.all_crypto_market);\n  const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\");\n  const btcCurrentLastPrice = btcLastPrice.current_price;\n  console.log(btcCurrentLastPrice); // const [lastPrice, setLastPrice] = useState(null)\n\n  const btc = new WebSocket('wss://stream.binance.com:9443/ws/btceur@trade');\n\n  btc.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setBTCPrice(cryptoPrice);\n  };\n\n  const eth = new WebSocket('wss://stream.binance.com:9443/ws/etheur@trade');\n\n  eth.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setETHPrice(cryptoPrice);\n  };\n\n  const bnb = new WebSocket('wss://stream.binance.com:9443/ws/bnbeur@trade');\n\n  bnb.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setBNBPrice(cryptoPrice);\n  };\n\n  const ada = new WebSocket('wss://stream.binance.com:9443/ws/adaeur@trade');\n\n  ada.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setADAPrice(cryptoPrice);\n  };\n\n  const xrp = new WebSocket('wss://stream.binance.com:9443/ws/xrpeur@trade');\n\n  xrp.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setXRPPrice(cryptoPrice);\n  };\n\n  const sol = new WebSocket('wss://stream.binance.com:9443/ws/soleur@trade');\n\n  sol.onmessage = event => {\n    let cryptoStock = JSON.parse(event.data);\n    let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString();\n    setSOLPrice(cryptoPrice);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-200 my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"BTC \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: !btcCurrentLastPrice || btcCurrentLastPrice === btcPrice ? \"text-gray-200\" : btcCurrentLastPrice > btcPrice ? \"text-green-500\" : \"text-red-500\",\n            children: btcPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"ETH \", ethPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"BNB \", bnbPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"ADA \", adaPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"XRP \", xrpPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200\",\n          children: [\"SOLANA \", solPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LiveCryptoWebSocket, \"v01NzzlrKe0ebhUcHoZaNXwWdtI=\", false, function () {\n  return [useSelector];\n});\n\n_c = LiveCryptoWebSocket;\nexport default LiveCryptoWebSocket;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveCryptoWebSocket\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Crypto/LiveCryptoWebSocket.jsx"],"names":["React","useEffect","useState","Container","Row","Col","useSelector","useDispatch","LiveCryptoWebSocket","btcPrice","setBTCPrice","ethPrice","setETHPrice","bnbPrice","setBNBPrice","adaPrice","setADAPrice","xrpPrice","setXRPPrice","solPrice","setSOLPrice","allCrypto","state","crypto","all_crypto_market","btcLastPrice","find","id","btcCurrentLastPrice","current_price","console","log","btc","WebSocket","onmessage","event","cryptoStock","JSON","parse","data","cryptoPrice","parseFloat","p","toLocaleString","eth","bnb","ada","xrp","sol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst LiveCryptoWebSocket = () => {\n\n\n\n\n    const [btcPrice, setBTCPrice] = useState(null)\n    // const [btcLastPrice, setBTCLastPrice] = useState(null)\n\n    const [ethPrice, setETHPrice] = useState(null)\n    const [bnbPrice, setBNBPrice] = useState(null)\n    const [adaPrice, setADAPrice] = useState(null)\n    const [xrpPrice, setXRPPrice] = useState(null)\n    const [solPrice, setSOLPrice] = useState(null)\n\n\n    const allCrypto = useSelector(state => state.crypto.all_crypto_market)\n    const btcLastPrice = allCrypto.find(crypto => crypto.id === \"bitcoin\")\n    const btcCurrentLastPrice = btcLastPrice.current_price\n    console.log(btcCurrentLastPrice)\n\n    // const [lastPrice, setLastPrice] = useState(null)\n\n    const btc = new WebSocket('wss://stream.binance.com:9443/ws/btceur@trade')\n    btc.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n\n        setBTCPrice(cryptoPrice)\n\n    }\n\n\n\n    const eth = new WebSocket('wss://stream.binance.com:9443/ws/etheur@trade')\n    eth.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setETHPrice(cryptoPrice)\n    }\n\n    const bnb = new WebSocket('wss://stream.binance.com:9443/ws/bnbeur@trade')\n    bnb.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setBNBPrice(cryptoPrice)\n    }\n\n    const ada = new WebSocket('wss://stream.binance.com:9443/ws/adaeur@trade')\n    ada.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setADAPrice(cryptoPrice)\n    }\n\n    const xrp = new WebSocket('wss://stream.binance.com:9443/ws/xrpeur@trade')\n    xrp.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setXRPPrice(cryptoPrice)\n    }\n\n    const sol = new WebSocket('wss://stream.binance.com:9443/ws/soleur@trade')\n    sol.onmessage = (event) => {\n        let cryptoStock = JSON.parse(event.data)\n        let cryptoPrice = parseFloat(cryptoStock.p).toLocaleString()\n        setSOLPrice(cryptoPrice)\n    }\n\n\n\n    useEffect(() => {\n\n\n    }, [])\n\n\n\n\n    return (\n        <div className='text-gray-200 my-5'>\n            <Row>\n                <Col md={2}>\n                    <div className='text-gray-200'>BTC <div className={!btcCurrentLastPrice || btcCurrentLastPrice === btcPrice ? \"text-gray-200\" : btcCurrentLastPrice > btcPrice ? \"text-green-500\" : \"text-red-500\"}>{btcPrice}</div></div>\n                </Col>\n                <Col md={2}>\n                    <div className='text-gray-200'>ETH {ethPrice}</div>\n\n                </Col>\n                <Col md={2}>\n                    <div className='text-gray-200'>BNB {bnbPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>ADA {adaPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>XRP {xrpPrice}</div>\n\n                </Col><Col md={2}>\n                    <div className='text-gray-200'>SOLANA {solPrice}</div>\n\n                </Col><Col md={2}>\n\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default LiveCryptoWebSocket\n"]},"metadata":{},"sourceType":"module"}