{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{getMovieCategory}from'../../redux/actions';import{Card,Button,Spinner}from'react-bootstrap';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LatestMovies=function LatestMovies(){var _LatestMovies$;var dispatch=useDispatch();var LatestMovies=useSelector(function(state){return state.movies.movie_category;});// console.log(LatestMovies[0])\nvar loading=useSelector(function(state){return state.movies.loading;});useEffect(function(){dispatch(getMovieCategory());},[]);var IMG_URL='https://image.tmdb.org/t/p/original';return/*#__PURE__*/_jsxs(\"div\",{className:\" text-gray-300 my-5\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-center\",children:\"Latest Movies\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center\",children:loading?/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"success\"}):(_LatestMovies$=LatestMovies[3])===null||_LatestMovies$===void 0?void 0:_LatestMovies$.data.results.map(function(movie){return/*#__PURE__*/_jsx(Link,{to:\"/movie/\".concat(movie.id,\"/credits\"),className:\"no-underline\",children:/*#__PURE__*/_jsxs(Card,{className:\"w-10 h-10 mx-2 mt-1 mb-4  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full\",children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",className:\"w-20 h-20\",src:IMG_URL+movie.poster_path}),/*#__PURE__*/_jsx(Card.Body,{})]},movie.id)});})})]});};export default LatestMovies;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Movies/LatestMovies.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","getMovieCategory","Card","Button","Spinner","Link","LatestMovies","dispatch","state","movies","movie_category","loading","IMG_URL","data","results","map","movie","id","poster_path"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,OAAvB,KAAsC,iBAAtC,CAEA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,uBAAM,oBAGvB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMM,CAAAA,YAAY,CAAGP,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaC,cAAjB,EAAN,CAAhC,CACA;AAEA,GAAMC,CAAAA,OAAO,CAAGZ,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaE,OAAjB,EAAN,CAA3B,CAGAd,SAAS,CAAC,UAAM,CACZU,QAAQ,CAACN,gBAAgB,EAAjB,CAAR,CACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMW,CAAAA,OAAO,CAAG,qCAAhB,CAKA,mBACI,aAAK,SAAS,CAAC,qBAAf,wBACI,WAAI,SAAS,CAAC,aAAd,2BADJ,cAEI,YAAK,SAAS,CAAC,+BAAf,UAGQD,OAAO,cACA,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,EADA,iBAEDL,YAAY,CAAC,CAAD,CAFX,yCAED,eAAiBO,IAAjB,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,SAACC,KAAD,qBAGhC,KAAC,IAAD,EAAM,EAAE,kBAAYA,KAAK,CAACC,EAAlB,YAAR,CAAwC,SAAS,CAAC,cAAlD,uBAEI,MAAC,IAAD,EAAqB,SAAS,CAAC,iIAA/B,wBACI,KAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAC,KAAlB,CAAwB,SAAS,CAAC,WAAlC,CAA8C,GAAG,CAAEL,OAAO,CAAGI,KAAK,CAACE,WAAnE,EADJ,cAEI,KAAC,IAAD,CAAM,IAAN,IAFJ,GAAWF,KAAK,CAACC,EAAjB,CAFJ,EAHgC,EAAlC,CALd,EAFJ,GADJ,CAyBH,CA5CD,CA8CA,cAAeX,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMovieCategory } from '../../redux/actions'\nimport { Card, Button, Spinner } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\n\nconst LatestMovies = () => {\n\n\n    const dispatch = useDispatch()\n    const LatestMovies = useSelector(state => state.movies.movie_category)\n    // console.log(LatestMovies[0])\n\n    const loading = useSelector(state => state.movies.loading)\n\n\n    useEffect(() => {\n        dispatch(getMovieCategory())\n    }, [])\n\n    const IMG_URL = 'https://image.tmdb.org/t/p/original'\n\n\n\n\n    return (\n        <div className=' text-gray-300 my-5'>\n            <h6 className='text-center'>Latest Movies</h6>\n            <div className=\"flex flex-wrap justify-center\" >\n                {\n\n                    loading\n                        ? (<Spinner animation=\"border\" variant=\"success\" />)\n                        : LatestMovies[3]?.data.results.map((movie) =>\n\n                        (\n                            <Link to={`/movie/${movie.id}/credits`} className=\"no-underline\">\n\n                                <Card key={movie.id} className='w-10 h-10 mx-2 mt-1 mb-4  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full' >\n                                    <Card.Img variant=\"top\" className=\"w-20 h-20\" src={IMG_URL + movie.poster_path} />\n                                    <Card.Body>\n                                    </Card.Body>\n                                </Card>\n                            </Link>\n                        )\n                        )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default LatestMovies\n"]},"metadata":{},"sourceType":"module"}