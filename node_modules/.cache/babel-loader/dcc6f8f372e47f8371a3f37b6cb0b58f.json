{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Card,Button,Spinner}from'react-bootstrap';import{useSelector,useDispatch}from'react-redux';import{fetchMovies}from'../../redux/actions';import{Link}from'react-router-dom';import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MovieList=function MovieList(){var dispatch=useDispatch();var allMovies=useSelector(function(state){return state.movies.all_movies;});console.log(allMovies);var loading=useSelector(function(state){return state.movies.loading;});useEffect(function(){dispatch(fetchMovies());},[]);var IMG_URL='https://image.tmdb.org/t/p/original';var movie_URL='https://api.themoviedb.org/3/search/movie/';var shortTitle=function shortTitle(title){var newTitle=title.split(\" \",2);return newTitle[0]+' '+newTitle[1];};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center pb-5\",children:loading?/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"success\"}):allMovies===null||allMovies===void 0?void 0:allMovies.map(function(movie){return/*#__PURE__*/_jsx(Link,{to:\"/movie/\".concat(movie.id,\"/credits\"),className:\"no-underline\",children:/*#__PURE__*/_jsxs(Card,{className:\"w-40 h-40 mx-1 my-5  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full\",children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",className:\"img-fluid\",src:IMG_URL+movie.poster_path}),/*#__PURE__*/_jsx(Card.Body,{})]},movie.id)});})})});};export default MovieList;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Movies/MovieList.jsx"],"names":["React","useEffect","useState","Card","Button","Spinner","useSelector","useDispatch","fetchMovies","Link","useParams","MovieList","dispatch","allMovies","state","movies","all_movies","console","log","loading","IMG_URL","movie_URL","shortTitle","title","newTitle","split","map","movie","id","poster_path"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,OAAvB,KAAsC,iBAAtC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA6B,qBAA7B,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,6IAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAGpB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,SAAS,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaC,UAAjB,EAAN,CAA7B,CACAC,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAEA,GAAMM,CAAAA,OAAO,CAAGb,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaI,OAAjB,EAAN,CAA3B,CAKAlB,SAAS,CAAC,UAAM,CACZW,QAAQ,CAACJ,WAAW,EAAZ,CAAR,CACH,CAFQ,CAEN,EAFM,CAAT,CAMA,GAAMY,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,SAAS,CAAG,4CAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE1B,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAiB,CAAjB,CAAf,CACA,MAAOD,CAAAA,QAAQ,CAAC,CAAD,CAAR,CAAc,GAAd,CAAoBA,QAAQ,CAAC,CAAD,CAAnC,CACH,CAJD,CAQA,mBACI,sCACI,YAAK,SAAS,CAAC,oCAAf,UAEQL,OAAO,cACA,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,EADA,CAEDN,SAFC,SAEDA,SAFC,iBAEDA,SAAS,CAAEa,GAAX,CAAe,SAACC,KAAD,qBAEb,KAAC,IAAD,EAAM,EAAE,kBAAYA,KAAK,CAACC,EAAlB,YAAR,CAAwC,SAAS,CAAC,cAAlD,uBACI,MAAC,IAAD,EAAqB,SAAS,CAAC,4HAA/B,wBACI,KAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAC,KAAlB,CAAwB,SAAS,CAAC,WAAlC,CAA8C,GAAG,CAAER,OAAO,CAAGO,KAAK,CAACE,WAAnE,EADJ,cAEI,KAAC,IAAD,CAAM,IAAN,IAFJ,GAAWF,KAAK,CAACC,EAAjB,CADJ,EAFa,EAAf,CAJd,EADJ,EADJ,CA+BH,CA7DD,CA+DA,cAAejB,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Button, Spinner } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMovies, } from '../../redux/actions'\n\nimport { Link } from 'react-router-dom'\nimport { useParams } from 'react-router-dom'\n\n\n\nconst MovieList = () => {\n\n\n    const dispatch = useDispatch()\n    const allMovies = useSelector(state => state.movies.all_movies)\n    console.log(allMovies)\n\n    const loading = useSelector(state => state.movies.loading)\n\n\n\n\n    useEffect(() => {\n        dispatch(fetchMovies())\n    }, [])\n\n\n\n    const IMG_URL = 'https://image.tmdb.org/t/p/original'\n\n    const movie_URL = 'https://api.themoviedb.org/3/search/movie/'\n\n    const shortTitle = (title) => {\n\n        let newTitle = title.split(\" \", 2)\n        return newTitle[0] + ' ' + newTitle[1]\n    }\n\n\n\n    return (\n        <>\n            <div className=\"flex flex-wrap justify-center pb-5\" >\n                {\n                    loading\n                        ? (<Spinner animation=\"border\" variant=\"success\" />)\n                        : allMovies?.map((movie) =>\n                        (\n                            <Link to={`/movie/${movie.id}/credits`} className=\"no-underline\">\n                                <Card key={movie.id} className='w-40 h-40 mx-1 my-5  hover:border-purple-800 hover:text-gray-200 border-blue-600 border-b-2 hover:bg-blue-800 rounded-full' >\n                                    <Card.Img variant=\"top\" className=\"img-fluid\" src={IMG_URL + movie.poster_path} />\n                                    <Card.Body>\n                                        {/* <Card.Text className='text-center'>\n                                        {shortTitle(movie.title)}\n                                    </Card.Text> */}\n\n                                    </Card.Body>\n                                </Card>\n                            </Link>\n                        )\n                        )\n                }\n            </div>\n\n\n\n\n\n\n        </>\n    )\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}