{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Games/MemoryGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport cardImages from '../Games/MemoryGameImages/imagedata.json';\nimport { selectedCardImage } from '../../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MemoryGame = () => {\n  _s();\n\n  const [allImages, setAllImages] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [randomImage, setRandomImage] = useState([]);\n  const dispatch = useDispatch();\n  const selectedImage = useSelector(state => state.games.selected_card_images);\n  const imagesData = cardImages;\n\n  const handLoadImage = () => {\n    var _imagesData$images;\n\n    return imagesData === null || imagesData === void 0 ? void 0 : (_imagesData$images = imagesData.images) === null || _imagesData$images === void 0 ? void 0 : _imagesData$images.sort((a, b) => 0.5 - Math.random());\n  };\n\n  useEffect(() => {\n    handLoadImage();\n  }, []);\n  console.log(imagesData);\n\n  const handleImageClick = e => {\n    console.log('clicked');\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MemoryGame, \"NfWWWf1mNwl3LkQYbMvqt7tG3SU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MemoryGame;\nexport default MemoryGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/src/components/Games/MemoryGame.jsx"],"names":["React","useState","useEffect","Container","Row","Col","cardImages","selectedCardImage","useSelector","useDispatch","MemoryGame","allImages","setAllImages","target","setTarget","visible","setVisible","randomImage","setRandomImage","dispatch","selectedImage","state","games","selected_card_images","imagesData","handLoadImage","images","sort","a","b","Math","random","console","log","handleImageClick","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMkB,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,aAAa,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,oBAAtB,CAAjC;AAEA,QAAMC,UAAU,GAAGlB,UAAnB;;AAEA,QAAMmB,aAAa,GAAG,MAAM;AAAA;;AACxB,WAAOD,UAAP,aAAOA,UAAP,6CAAOA,UAAU,CAAEE,MAAnB,uDAAO,mBAAoBC,IAApB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU,MAAMC,IAAI,CAACC,MAAL,EAAzC,CAAP;AACH,GAFD;;AAIA7B,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;;AAEA,QAAMU,gBAAgB,GAAIC,CAAD,IAAO;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAjB,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAHD;;AAOA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgEH,CA7FD;;GAAML,U;UAOeD,W,EACKD,W;;;KARpBE,U;AA+FN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport cardImages from '../Games/MemoryGameImages/imagedata.json'\nimport { selectedCardImage } from '../../redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst MemoryGame = () => {\n\n    const [allImages, setAllImages] = useState(null)\n    const [target, setTarget] = useState(null)\n    const [visible, setVisible] = useState(false)\n    const [randomImage, setRandomImage] = useState([])\n\n    const dispatch = useDispatch()\n    const selectedImage = useSelector(state => state.games.selected_card_images)\n\n    const imagesData = cardImages\n\n    const handLoadImage = () => {\n        return imagesData?.images?.sort((a, b) => 0.5 - Math.random())\n    }\n\n    useEffect(() => {\n        handLoadImage()\n    }, [])\n\n    console.log(imagesData)\n\n    const handleImageClick = (e) => {\n        console.log('clicked')\n        setVisible(!visible)\n    }\n\n\n\n    return (\n        <>\n            <div className=\"flex flex-wrap\">\n\n                {/* <div className='flex border rounded-lg '>\n                    <img onClick={(e) => handleImageClick(e.target.value)} className={visible ? ' w-20 h-20 opacity-100' : ' w-20 h-20 opacity-0'} src={imagesData[0].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[1].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[2].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[3].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[4].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[5].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[6].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[7].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[8].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[9].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[10].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[11].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[12].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[13].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[14].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[15].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[16].image} alt=\"\" />\n                </div>\n                <div className='flex border rounded-lg '>\n                    <img className={' w-20 h-20 opacity-100'} src={imagesData[17].image} alt=\"\" />\n                </div> */}\n\n            </div>\n\n\n        </>\n    )\n}\n\nexport default MemoryGame\n"]},"metadata":{},"sourceType":"module"}