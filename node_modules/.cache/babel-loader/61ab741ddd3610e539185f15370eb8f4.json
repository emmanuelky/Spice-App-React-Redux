{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/Player.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = () => {\n  _s();\n\n  // const [isPlaying, setIsPlaying] = useState(false)\n  const currentSong = useSelector(state => state.music.current_song);\n  console.log(currentSong); // useEffect(() => {\n  //     // setIsPlaying(!isPlaying)\n  // }, [currentSong])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute fixed-bottom\",\n      children: /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n        src: currentSong === null || currentSong === void 0 ? void 0 : currentSong.preview,\n        autoPlay: true,\n        controls: true,\n        className: \"mx-auto text-blue-600\",\n        onPause: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"DYoc3ZlB+yJgDjw9tNQgUyS0AJk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Music/Player.jsx"],"names":["React","useEffect","useState","ReactPlayer","useSelector","useDispatch","ReactAudioPlayer","Player","currentSong","state","music","current_song","console","log","preview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA,QAAMC,WAAW,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,YAAtB,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAJiB,CAMjB;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BAgBI,QAAC,gBAAD;AACI,QAAA,GAAG,EAAEA,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEM,OADtB;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,SAAS,EAAC,uBAJd;AAKI,QAAA,OAAO;AALX;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAvCD;;GAAMP,M;UAGkBH,W;;;KAHlBG,M;AAyCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactPlayer from 'react-player'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n\nconst Player = () => {\n\n    // const [isPlaying, setIsPlaying] = useState(false)\n    const currentSong = useSelector(state => state.music.current_song)\n    console.log(currentSong)\n\n    // useEffect(() => {\n    //     // setIsPlaying(!isPlaying)\n    // }, [currentSong])\n\n    return (\n        <div className='relative'>\n            <div className='absolute fixed-bottom'>\n\n\n                {/* <ReactPlayer url={currentSong?.preview}\n                    // playing\n                    controls={true}\n\n                    className=\"mx-auto text-blue-600\"\n                    pip={true}\n                    stopOnUnmount={true}\n                    loop={true}\n                // playIcon={<img src={currentSong?.album.cover} alt=\"\" />}\n                /> */}\n\n\n\n                <ReactAudioPlayer\n                    src={currentSong?.preview}\n                    autoPlay\n                    controls\n                    className=\"mx-auto text-blue-600\"\n                    onPause\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Player\n"]},"metadata":{},"sourceType":"module"}