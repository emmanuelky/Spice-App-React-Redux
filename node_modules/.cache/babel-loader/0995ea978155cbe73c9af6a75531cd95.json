{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';// import { } from '../../redux/actions'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Comments=function Comments(){var lastMessageView=useRef(null);// const dispatch = useDispatch()\nvar postID=useSelector(function(state){return state.posts.post_id;});var fetchAllComments=useSelector(function(state){return state.posts.comments;});var uniquePostComments=fetchAllComments.filter(function(comment){return comment.data.post_Id===postID;});console.log(uniquePostComments);useEffect(function(){if(fetchAllComments.length-1&&lastMessageView.current){lastMessageView.current.scrollIntoView({behavior:\"smooth\"});}},[fetchAllComments.length]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\" flex flex-col mx-1 overflow-y-auto h-80 \",children:uniquePostComments===null||uniquePostComments===void 0?void 0:uniquePostComments.map(function(comment){return/*#__PURE__*/_jsxs(\"div\",{ref:lastMessageView,className:\" bg-gray-50 rounded-lg my-2 px-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between my-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex align-items-center\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-5 w-5 rounded-full\",src:comment.data.user.image,alt:\"\"}),/*#__PURE__*/_jsx(\"i\",{className:\"text-xs mx-2 font-bold\",children:comment.data.user.firstName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"  \",/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs\",children:[\"@\",comment.data.createdAt]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\" mx-4 my-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-lg break-words text-justify\",children:comment.data.commentText})})]},comment.data.id);})})});};export default Comments;","map":{"version":3,"sources":["/Users/emmanuelakhereiyere/Desktop/Strive/Spice-App--React-Redux/spice-app/src/components/Feeds/Comments.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Comments","lastMessageView","postID","state","posts","post_id","fetchAllComments","comments","uniquePostComments","filter","comment","data","post_Id","console","log","length","current","scrollIntoView","behavior","map","user","image","firstName","createdAt","commentText","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAA0C,aAA1C,CACA;6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,GAAMC,CAAAA,eAAe,CAAGJ,MAAM,CAAC,IAAD,CAA9B,CAEA;AACA,GAAMK,CAAAA,MAAM,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,OAAhB,EAAN,CAA1B,CACA,GAAMC,CAAAA,gBAAgB,CAAGR,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYG,QAAhB,EAAN,CAApC,CAEA,GAAMC,CAAAA,kBAAkB,CAAGF,gBAAgB,CAACG,MAAjB,CAAwB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,CAAaC,OAAb,GAAyBV,MAA7B,EAA/B,CAA3B,CAEAW,OAAO,CAACC,GAAR,CAAYN,kBAAZ,EAEAZ,SAAS,CAAC,UAAM,CAEZ,GAAIU,gBAAgB,CAACS,MAAjB,CAA0B,CAA1B,EAA+Bd,eAAe,CAACe,OAAnD,CAA4D,CACxDf,eAAe,CAACe,OAAhB,CAAwBC,cAAxB,CAAuC,CACnCC,QAAQ,CAAE,QADyB,CAAvC,EAGH,CACJ,CAPQ,CAON,CAACZ,gBAAgB,CAACS,MAAlB,CAPM,CAAT,CAUA,mBACI,sCACI,YAAK,SAAS,4CAAd,UAEQP,kBAFR,SAEQA,kBAFR,iBAEQA,kBAAkB,CAAEW,GAApB,CAAwB,SAAAT,OAAO,qBAC3B,aAA2B,GAAG,CAAET,eAAhC,CAAiD,SAAS,CAAC,kCAA3D,wBACI,aAAK,SAAS,CAAC,2BAAf,wBACI,aAAK,SAAS,CAAC,yBAAf,wBACI,YAAK,SAAS,CAAC,sBAAf,CAAsC,GAAG,CAAES,OAAO,CAACC,IAAR,CAAaS,IAAb,CAAkBC,KAA7D,CAAoE,GAAG,CAAC,EAAxE,EADJ,cAEI,UAAG,SAAS,CAAC,wBAAb,UAAuCX,OAAO,CAACC,IAAR,CAAaS,IAAb,CAAkBE,SAAzD,EAFJ,GADJ,cAKI,yCAAO,cAAM,SAAS,CAAC,SAAhB,eAA4BZ,OAAO,CAACC,IAAR,CAAaY,SAAzC,GAAP,GALJ,GADJ,cASI,YAAK,SAAS,CAAC,YAAf,uBACI,aAAM,SAAS,CAAC,kCAAhB,UAAoDb,OAAO,CAACC,IAAR,CAAaa,WAAjE,EADJ,EATJ,GAAUd,OAAO,CAACC,IAAR,CAAac,EAAvB,CAD2B,EAA/B,CAFR,EADJ,EADJ,CAuBH,CA7CD,CA+CA,cAAezB,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch, } from 'react-redux'\n// import { } from '../../redux/actions'\n\nconst Comments = () => {\n\n    const lastMessageView = useRef(null);\n\n    // const dispatch = useDispatch()\n    const postID = useSelector(state => state.posts.post_id)\n    const fetchAllComments = useSelector(state => state.posts.comments)\n\n    const uniquePostComments = fetchAllComments.filter(comment => comment.data.post_Id === postID)\n\n    console.log(uniquePostComments)\n\n    useEffect(() => {\n\n        if (fetchAllComments.length - 1 && lastMessageView.current) {\n            lastMessageView.current.scrollIntoView({\n                behavior: \"smooth\",\n            });\n        }\n    }, [fetchAllComments.length])\n\n\n    return (\n        <>\n            <div className={` flex flex-col mx-1 overflow-y-auto h-80 `}>\n                {\n                    uniquePostComments?.map(comment => (\n                        <div key={comment.data.id} ref={lastMessageView} className=\" bg-gray-50 rounded-lg my-2 px-2\">\n                            <div className=\"flex justify-between my-2\">\n                                <div className=\"flex align-items-center\">\n                                    <img className=\"h-5 w-5 rounded-full\" src={comment.data.user.image} alt=\"\" />\n                                    <i className=\"text-xs mx-2 font-bold\">{comment.data.user.firstName}</i>\n                                </div>\n                                <div>  <span className=\"text-xs\">@{comment.data.createdAt}</span></div>\n\n                            </div>\n                            <div className=\" mx-4 my-2\">\n                                <span className=\"text-lg break-words text-justify\">{comment.data.commentText}</span>\n                            </div>\n\n                        </div>))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}